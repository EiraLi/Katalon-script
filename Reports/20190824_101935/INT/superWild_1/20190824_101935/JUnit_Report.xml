<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites name="superWild_1" time="154" tests="0" failures="0" errors="1">
    <testsuite name="superWild_1" tests="0" failures="0" errors="1" time="154" timestamp="2019-08-24 10:19:47" hostname="eiralee - 172.20.10.2" id="Test Suites/INT/superWild_1">
        <properties>
            <property name="deviceName" value=""/>
            <property name="devicePlatform" value=""/>
            <property name="logFolder" value="/Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935"/>
            <property name="logFiles" value="/Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/execution0.log"/>
            <property name="attachments" value=""/>
            <property name="hostName" value="eiralee - 172.20.10.2"/>
            <property name="hostAddress" value="172.20.10.2"/>
            <property name="os" value="Mac OS X 64bit"/>
            <property name="katalonVersion" value="6.3.1.2"/>
        </properties>
        <testcase name="Test Cases/INT_env/1_Free_Spin_CALL" classname="Test Cases/INT_env/1_Free_Spin_CALL" status="ERROR">
            <error type="ERROR" message="Test Cases/INT_env/1_Free_Spin_CALL FAILED.&#xA;Reason:&#xA;groovy.lang.MissingPropertyException: No such property: partner_code for class: Script1565429177601&#xA;&#x9;at 1_Free_Spin_CALL.run(1_Free_Spin_CALL:210)&#xA;&#x9;at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)&#xA;&#x9;at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)&#xA;&#x9;at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)&#xA;&#x9;at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)&#xA;&#x9;at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)&#xA;&#x9;at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)&#xA;&#x9;at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)&#xA;&#x9;at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:150)&#xA;&#x9;at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:123)&#xA;&#x9;at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:87)&#xA;&#x9;at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)&#xA;&#x9;at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)&#xA;&#x9;at TempTestSuite1566613185852.run(TempTestSuite1566613185852.groovy:35)&#xA;"/>
            <system-out>2019-08-24 10:19:48 - [TEST_CASE][ERROR] - Test Cases/INT_env/1_Free_Spin_CALL: Test Cases/INT_env/1_Free_Spin_CALL FAILED.
Reason:
groovy.lang.MissingPropertyException: No such property: partner_code for class: Script1565429177601
	at 1_Free_Spin_CALL.run(1_Free_Spin_CALL:210)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:123)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:87)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1566613185852.run(TempTestSuite1566613185852.groovy:35)


2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_top_level = new java.util.ArrayList(): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_top_level.add("booster_type"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_top_level.add("currency"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_top_level.add("player_id"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_top_level.add("round_id"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_top_level.add("spin_results"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_spin_result = new java.util.ArrayList(): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_spin_result.add("balance"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_spin_result.add("bet_value"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_spin_result.add("features_triggered"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_spin_result.add("line"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_spin_result.add("reel_wins"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_spin_result.add("reels"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_spin_result.add("scatter_win"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_spin_result.add("total_bet"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_spin_result.add("total_win"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_spin_result.add("transaction_id"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_spin_result.add("transaction_time"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_spin_result.add("transaction_type"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_feature_trigger = new java.util.ArrayList(): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_feature_trigger.add("complete"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_feature_trigger.add("feature_state"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_feature_trigger.add("subfeatures"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_feature_trigger.add("type"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_feature_state = new java.util.ArrayList(): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_feature_state.add("free_spins_left"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_feature_state.add("total_free_spin_count"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_feature_state.add("total_free_spin_win_amount"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_reel = new java.util.ArrayList(): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_reel.add("symbols"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_reel_symbol1 = new java.util.ArrayList(): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_reel_symbol1.add("symbol"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_reel_symbol2 = new java.util.ArrayList(): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_reel_symbol2.add("symbol"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_reel_symbol3 = new java.util.ArrayList(): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - NG_reel_symbol3.add("symbol"): null

2019-08-24 10:19:49 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/Wallet/Get_Session_Token", ["url_krug_gw":url_krug_gw, "partner":Partner, "secret_key":secret_key, "userid":Userid])): Send request and verify the response successfully

2019-08-24 10:19:50 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/0.har

2019-08-24 10:19:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:19:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:19:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:19:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:19:51 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:19:51 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:19:51 - [TEST_STEP][PASSED] - getResponseText()).contains("session_token"): null

2019-08-24 10:19:51 - [TEST_STEP][PASSED] - getsession = new groovy.json.JsonSlurper(): null

2019-08-24 10:19:51 - [TEST_STEP][PASSED] - result_getsession = getsession.parseText(response.getResponseBodyContent()): null

2019-08-24 10:19:51 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-24 10:19:51 - [TEST_STEP][PASSED] - println("...value extracted is :" + session_token): null

2019-08-24 10:19:51 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-24 10:19:53 - [TEST_STEP][PASSED] - println("GlobalVariable is :" + session_token): null

2019-08-24 10:19:53 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-24 10:19:53 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-24 10:19:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:19:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:19:53 - [TEST_STEP][PASSED] - M4_login = sendRequestAndVerify(findTestObject("INT/RGS(M4)/M4_Login", ["partner":Partner, "game_code":Game_code, "session_token":session_token])): Send request and verify the response successfully

2019-08-24 10:19:55 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/1.har

2019-08-24 10:19:55 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:19:55 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:19:55 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:19:55 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:19:55 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:19:55 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:19:55 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:19:55 - [TEST_STEP][PASSED] - M4_login = new groovy.json.JsonSlurper(): null

2019-08-24 10:19:55 - [TEST_STEP][PASSED] - result_M4_login = M4_login.parseText(response.getResponseBodyContent()): null

2019-08-24 10:19:55 - [TEST_STEP][PASSED] - M4_login_user_id = user_id: null

2019-08-24 10:19:55 - [TEST_STEP][PASSED] - println("playerid is: " + M4_login_user_id): null

2019-08-24 10:19:55 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-24 10:19:55 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:19:55 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:19:55 - [TEST_STEP][PASSED] - M4_init = sendRequestAndVerify(findTestObject("INT/RGS(M4)/M4_init", ["partner":Partner, "gameId":gameId, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-24 10:19:56 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/2.har

2019-08-24 10:19:56 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:19:56 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - M4_init = new groovy.json.JsonSlurper(): null

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - result_M4_init = M4_init.parseText(response.getResponseBodyContent()): null

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - rgs_session_token = session_token: null

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - M4_init_balance = balance: null

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - M4_init_balance = M4_init_balance: null

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - game_code = genesis_id: null

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - game_code = game_code: null

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - M4_free_round = free_round: null

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - M4_free_round = M4_free_round: null

2019-08-24 10:19:56 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:19:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - for ([i = 0, i &lt;= 300, (i++)]): null

2019-08-24 10:19:56 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:19:57 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/3.har

2019-08-24 10:19:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:19:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:19:57 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:19:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:19:57 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:19:57 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:19:57 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:19:57 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:19:57 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:19:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:19:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:19:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:19:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:19:57 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:19:57 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:19:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:19:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:19:58 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/4.har

2019-08-24 10:19:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:19:58 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:19:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:19:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:19:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:19:59 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/5.har

2019-08-24 10:19:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:19:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:19:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:19:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:19:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:00 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/6.har

2019-08-24 10:20:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:00 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/7.har

2019-08-24 10:20:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:01 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/8.har

2019-08-24 10:20:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:02 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/9.har

2019-08-24 10:20:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:03 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:05 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/10.har

2019-08-24 10:20:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:05 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:06 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/11.har

2019-08-24 10:20:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:14 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/12.har

2019-08-24 10:20:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:14 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/13.har

2019-08-24 10:20:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:15 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:15 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:15 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:15 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/14.har

2019-08-24 10:20:15 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:15 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:22 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/15.har

2019-08-24 10:20:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:23 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:23 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/16.har

2019-08-24 10:20:23 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:23 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:31 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:31 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/17.har

2019-08-24 10:20:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:31 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:31 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:32 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/18.har

2019-08-24 10:20:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:32 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:32 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:32 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/19.har

2019-08-24 10:20:33 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:33 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:39 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:39 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:40 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/20.har

2019-08-24 10:20:40 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:40 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:40 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:40 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:40 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:41 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/21.har

2019-08-24 10:20:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:41 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:41 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/22.har

2019-08-24 10:20:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:45 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:55 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:55 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:55 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/23.har

2019-08-24 10:20:55 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:55 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:56 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:56 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:56 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/24.har

2019-08-24 10:20:56 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:56 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:57 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:57 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:57 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:20:59 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/25.har

2019-08-24 10:20:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:20:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:20:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:20:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:20:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:00 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/26.har

2019-08-24 10:21:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:02 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:02 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:02 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:02 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/27.har

2019-08-24 10:21:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:06 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/28.har

2019-08-24 10:21:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:07 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/29.har

2019-08-24 10:21:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:07 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:11 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:11 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:14 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/30.har

2019-08-24 10:21:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:15 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/31.har

2019-08-24 10:21:15 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:15 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:23 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/32.har

2019-08-24 10:21:23 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:23 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:24 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/33.har

2019-08-24 10:21:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:28 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:28 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:28 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:28 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:38 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:38 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:38 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:38 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:38 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:38 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:39 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/34.har

2019-08-24 10:21:39 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:39 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:39 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:39 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:40 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/35.har

2019-08-24 10:21:40 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:40 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:40 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:40 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:40 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/36.har

2019-08-24 10:21:40 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:40 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:41 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:41 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/37.har

2019-08-24 10:21:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:41 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:42 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/38.har

2019-08-24 10:21:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:48 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/39.har

2019-08-24 10:21:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:49 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/40.har

2019-08-24 10:21:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:56 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:56 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:57 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/41.har

2019-08-24 10:21:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:57 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:57 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:57 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:21:57 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:21:58 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/42.har

2019-08-24 10:21:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:21:58 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:21:58 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:21:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:21:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:22:02 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:22:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:22:02 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/43.har

2019-08-24 10:22:03 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:22:03 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:22:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:22:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:22:03 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:22:03 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:22:03 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:22:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:22:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:22:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:22:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:22:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:22:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:22:07 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:22:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:22:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:22:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:22:13 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/44.har

2019-08-24 10:22:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:22:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:22:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:22:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:22:13 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/45.har

2019-08-24 10:22:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:22:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:22:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:22:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:22:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 10:22:14 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/46.har

2019-08-24 10:22:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:22:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 10:22:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:22:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - break: null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_round_id is: " + M4_spin_round_id): null

2019-08-24 10:22:14 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_Round_detail", ["partner":Partner, "M4_spin_round_id":M4_spin_round_id])): Send request and verify the response successfully

2019-08-24 10:22:15 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_101935/INT/superWild_1/20190824_101935/requests/main/47.har

2019-08-24 10:22:15 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 10:22:15 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round = new groovy.json.JsonSlurper(): null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_detail = M4_round.parseText(response.getResponseBodyContent()): null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_object = M4_round_detail: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_object = M4_round_object: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_transaction_type = transaction_type: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_transaction_type = M4_round_transaction_type: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_player_id = player_id: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_player_id = M4_round_player_id: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_booster_type = booster_type: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_booster_type = M4_round_booster_type: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_currency = currency: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_currency = M4_round_currency: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_id = round_id: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_id = M4_round_id: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_transaction_id = transaction_id: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_transaction_id = M4_round_transaction_id: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_transaction_time = transaction_time: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_transaction_time = M4_round_transaction_time: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_total_win = total_win: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_total_win = M4_round_total_win: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_balance_long = balance: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_balance = Long.toString(M4_round_balance_long): null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_balance = M4_round_balance: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_total_bet = total_bet: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_total_bet = M4_round_total_bet: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_bet_value = bet_value: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_bet_value = M4_round_bet_value: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_line = line: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_line = M4_round_line: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels1 = reels[0]: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels1 = M4_round_reels1: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels2 = reels[1]: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels2 = M4_round_reels2: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels3 = reels[2]: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels3 = M4_round_reels3: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels4 = reels[3]: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels4 = M4_round_reels4: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels5 = reels[4]: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels5 = M4_round_reels5: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_F_reels1 = reels[0]: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_F_reels1 = M4_round_F_reels1: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_F_reels2 = reels[1]: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_F_reels2 = M4_round_F_reels2: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_F_reels3 = reels[2]: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_F_reels3 = M4_round_F_reels3: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_F_reels4 = reels[3]: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_F_reels4 = M4_round_F_reels4: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_F_reels5 = reels[4]: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_F_reels5 = M4_round_F_reels5: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = symbols[0]: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = M4_round_reels0_symbols1: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = symbols[1]: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = M4_round_reels0_symbols2: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = symbols[2]: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = M4_round_reels0_symbols3: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = symbols[0]: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = M4_round_reels1_symbols1: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = symbols[1]: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = M4_round_reels1_symbols2: null

2019-08-24 10:22:15 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = symbols[2]: null

2019-08-24 10:22:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = M4_round_reels1_symbols3: null

2019-08-24 10:22:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols4 = symbols[3]: null

2019-08-24 10:22:19 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = symbol: null

2019-08-24 10:22:19 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = M4_round_reels_symbols_all: null

2019-08-24 10:22:19 - [TEST_STEP][PASSED] - M4_round_features_triggered = features_triggered: null

2019-08-24 10:22:19 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-24 10:22:19 - [TEST_STEP][PASSED] - M4_round_features_complete = complete: null

2019-08-24 10:22:19 - [TEST_STEP][PASSED] - M4_round_features_complete = M4_round_features_complete: null

2019-08-24 10:22:19 - [TEST_STEP][PASSED] - M4_round_free_spins_left = free_spins_left: null

2019-08-24 10:22:19 - [TEST_STEP][PASSED] - M4_round_free_spins_left = M4_round_free_spins_left: null

2019-08-24 10:22:19 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = total_free_spin_count: null

2019-08-24 10:22:19 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = M4_round_total_free_spin_count: null

2019-08-24 10:22:19 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = total_free_spin_win_amount: null

2019-08-24 10:22:19 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = M4_round_total_free_spin_win_amount: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_subfeatures = subfeatures: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_subfeatures = M4_round_subfeatures: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = wild_multiplier: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = M4_round_wild_multiplier: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_wild_config = wild_config: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_wild_config = M4_round_wild_config: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_wild_config_index = index: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_free_spin_left = free_spins_lef: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_free_spin_left = M4_round_free_spin_left: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_original_reels = original_reels: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_original_reels = M4_round_original_reels: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_swapped_reels = swapped_reels: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_swapped_reels = M4_round_swapped_reels: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_free_spins_added = free_spins_added: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_spin_result_list = spin_results[0]: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_feature_state = feature_state: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_feature_state = M4_round_feature_state: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_feature_state_all = feature_state: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_feature_state_all = M4_round_feature_state_all: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_features_type = type: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_features_type = M4_round_features_type: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_scatter_win = scatter_win: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_scatter_win = M4_round_scatter_win: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_spin_result1 = spin_results[1]: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_spin_result1 = M4_round_spin_result1: null

2019-08-24 10:22:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 10:22:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_object_key = M4_round_object.keySet(): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_spin_result_key = M4_round_spin_result_list.keySet(): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_reel_key = M4_round_reels1.keySet(): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_feature_state_key = M4_round_feature_state.keySet(): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_reels_symbols_key_1 = M4_round_reels0_symbols1.keySet(): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_reels_symbols_key_2 = M4_round_reels0_symbols2.keySet(): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_reels_symbols_key_3 = M4_round_reels0_symbols3.keySet(): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_object_key_list = new java.util.ArrayList(M4_round_object_key): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_spin_result_key_list = new java.util.ArrayList(M4_round_spin_result_key): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_reel_key_list = new java.util.ArrayList(M4_round_reel_key): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_feature_state_key_list = new java.util.ArrayList(M4_round_feature_state_key): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_reels_symbols_key1 = new java.util.ArrayList(M4_round_reels_symbols_key_1): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_reels_symbols_key2 = new java.util.ArrayList(M4_round_reels_symbols_key_2): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_reels_symbols_key3 = new java.util.ArrayList(M4_round_reels_symbols_key_3): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - features_trigger = features_triggered: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - feature_state_key = "": null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - features_triggered = "": null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; features_trigger.size(), (i++)]): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - feature_type = type: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - if (feature_type == "FREE_SPIN"): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - feature_type = type: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - if (feature_type == "FREE_SPIN"): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("feature_type is:" + feature_type): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - feature_state = feature_state: null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - feature_state_key = feature_state.keySet(): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - features_triggered = features_trigger[i].keySet(): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - features_triggered_list = new java.util.ArrayList(features_triggered): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - feature_state_list = new java.util.ArrayList(feature_state_key): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("M4_round_object_key_list is:" + M4_round_object_key_list): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("M4_round_spin_result_key_list is: " + M4_round_spin_result_key_list): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("features_triggered_list is: " + features_triggered_list): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("M4_round_reel_key_list is: " + M4_round_reel_key_list): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("M4_round_feature_state_key_list is: " + M4_round_feature_state_key_list): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("M4_round_reels_symbols_key_1 is: " + M4_round_reels_symbols_key_1): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("M4_round_reels_symbols_key_2 is: " + M4_round_reels_symbols_key_2): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("M4_round_reels_symbols_key_3 is: " + M4_round_reels_symbols_key_3): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("NG_top_level is: " + NG_top_level): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("NG_spin_result is:" + NG_spin_result): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("NG_feature_trigger is:" + NG_feature_trigger): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("NG_reel is: " + NG_reel): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("NG_feature_state is: " + NG_feature_state): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("NG_reel_symbol1 is: " + NG_reel_symbol1): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("NG_reel_symbol2 is: " + NG_reel_symbol2): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("NG_reel_symbol3 is: " + NG_reel_symbol3): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - println("feature_state_list is: " + feature_state_list): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - assert NG_top_level.equals(M4_round_object_key_list): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - assert NG_spin_result.equals(M4_round_spin_result_key_list): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - assert NG_feature_trigger.equals(features_triggered_list): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - assert NG_reel.equals(M4_round_reel_key_list): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - assert NG_feature_state.equals(feature_state_list): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - assert NG_reel_symbol1.equals(M4_round_reels_symbols_key1): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - assert NG_reel_symbol2.equals(M4_round_reels_symbols_key2): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - assert NG_reel_symbol3.equals(M4_round_reels_symbols_key3): null

2019-08-24 10:22:22 - [TEST_STEP][PASSED] - callTestCase(findTestCase("INT_env/compare_values/1_freeSpin_verify_value"), ["partner_code":partner_code, "Partner":Partner, "Userid":Userid, "Game_code":Game_code, "url_krug_gw":url_krug_gw, "secret_key":secret_key, ... ]): null</system-out>
            <system-err>2019-08-24 10:19:48 - [TEST_CASE][ERROR] - Test Cases/INT_env/1_Free_Spin_CALL: Test Cases/INT_env/1_Free_Spin_CALL FAILED.
Reason:
groovy.lang.MissingPropertyException: No such property: partner_code for class: Script1565429177601
	at 1_Free_Spin_CALL.run(1_Free_Spin_CALL:210)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:150)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:123)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:87)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1566613185852.run(TempTestSuite1566613185852.groovy:35)</system-err>
        </testcase>
        <system-out>2019-08-24 10:19:47 - [TEST_SUITE][INCOMPLETE] - superWild_1: null</system-out>
        <system-err>2019-08-24 10:19:47 - [TEST_SUITE][INCOMPLETE] - superWild_1: null</system-err>
    </testsuite>
</testsuites>
