<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites name="3_ExtraFG" time="446" tests="1" failures="0" errors="0">
    <testsuite name="3_ExtraFG" tests="1" failures="0" errors="0" time="446" timestamp="2019-08-13 17:46:53" hostname="eiralee - 172.16.60.194" id="Test Suites/STG/3_ExtraFG">
        <properties>
            <property name="deviceName" value=""/>
            <property name="devicePlatform" value=""/>
            <property name="logFolder" value="/Users/eiralee/Katalon_Script/SuperWild/Reports/STG/3_ExtraFG/20190813_174639"/>
            <property name="logFiles" value="/Users/eiralee/Katalon_Script/SuperWild/Reports/STG/3_ExtraFG/20190813_174639/execution0.log, /Users/eiralee/Katalon_Script/SuperWild/Reports/STG/3_ExtraFG/20190813_174639/execution1.log, /Users/eiralee/Katalon_Script/SuperWild/Reports/STG/3_ExtraFG/20190813_174639/execution2.log"/>
            <property name="attachments" value=""/>
            <property name="hostName" value="eiralee - 172.16.60.194"/>
            <property name="hostAddress" value="172.16.60.194"/>
            <property name="os" value="Mac OS X 64bit"/>
            <property name="katalonVersion" value="6.2.0.1"/>
        </properties>
        <testcase name="Test Cases/STG_env/3_ExtraFG_CALL" classname="Test Cases/STG_env/3_ExtraFG_CALL" status="PASSED">
            <system-out>2019-08-13 17:46:54 - [TEST_CASE][PASSED] - Test Cases/STG_env/3_ExtraFG_CALL: Test Cases/STG_env/3_ExtraFG_CALL

2019-08-13 17:46:55 - [TEST_STEP][PASSED] - ExtraFG = new java.util.ArrayList(): null

2019-08-13 17:46:55 - [TEST_STEP][PASSED] - ExtraFG.add("free_spins_left"): null

2019-08-13 17:46:55 - [TEST_STEP][PASSED] - ExtraFG.add("free_spins_added"): null

2019-08-13 17:46:55 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("STG/Wallet/Get_Session_Token", ["url_krug_gw":url_krug_gw, "partner":Partner, "secret_key":secret_key, "userid":Userid])): Send request and verify the response successfully

2019-08-13 17:46:56 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:46:56 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:46:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:46:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:46:56 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:46:56 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:46:56 - [TEST_STEP][PASSED] - getResponseText()).contains("session_token"): null

2019-08-13 17:46:56 - [TEST_STEP][PASSED] - getsession = new groovy.json.JsonSlurper(): null

2019-08-13 17:46:56 - [TEST_STEP][PASSED] - result_getsession = getsession.parseText(response.getResponseBodyContent()): null

2019-08-13 17:46:56 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-13 17:46:56 - [TEST_STEP][PASSED] - println("...value extracted is :" + session_token): null

2019-08-13 17:46:56 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - println("GlobalVariable is :" + session_token): null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-13 17:46:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:46:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - M4_login = sendRequestAndVerify(findTestObject("STG/RGS(M4)/M4_Login", ["partner":Partner, "game_code":Game_code, "session_token":session_token])): Send request and verify the response successfully

2019-08-13 17:46:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:46:58 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - M4_login = new groovy.json.JsonSlurper(): null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - result_M4_login = M4_login.parseText(response.getResponseBodyContent()): null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - M4_login_user_id = user_id: null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - println("playerid is: " + M4_login_user_id): null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-13 17:46:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:46:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - M4_init = sendRequestAndVerify(findTestObject("STG/RGS(M4)/M4_init", ["partner":Partner, "M4_recorder":M4_recorder, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-13 17:46:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:46:58 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - M4_init = new groovy.json.JsonSlurper(): null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - result_M4_init = M4_init.parseText(response.getResponseBodyContent()): null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - rgs_session_token = session_token: null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - M4_init_balance = balance: null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - M4_init_balance = M4_init_balance: null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - game_code = genesis_id: null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - game_code = game_code: null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - M4_free_round = free_round: null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - M4_free_round = M4_free_round: null

2019-08-13 17:46:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:46:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt;= 500, (i++)]): null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:46:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:46:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:46:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:46:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:46:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:46:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:46:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:46:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:04 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:04 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:04 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:04 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:04 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:04 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:04 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:05 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:05 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:05 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:05 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:05 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:09 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:16 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:16 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:16 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:20 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:23 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:23 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:25 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:25 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:29 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:29 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:29 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:30 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:30 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:30 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:30 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:32 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:33 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:33 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:33 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:33 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:33 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:33 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:33 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:33 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:34 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:51 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:51 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:51 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:55 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:55 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:55 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:55 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:55 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:55 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:47:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:47:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:47:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:47:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:47:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:03 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:03 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:03 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:03 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:03 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:07 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:07 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:07 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:07 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:09 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:16 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:16 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:16 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:31 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:31 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:31 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:55 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:55 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:48:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:48:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:48:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:48:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:48:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:04 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:04 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:04 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:04 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:04 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:05 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:10 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:10 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:10 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:10 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:15 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:15 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:15 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:15 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:15 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:15 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:15 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:15 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:15 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:20 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:20 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:20 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:20 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:25 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:25 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:25 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:30 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:30 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:30 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:30 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:31 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:31 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:31 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:31 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:38 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:38 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:52 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:52 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:53 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:58 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:58 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:58 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:58 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:58 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:58 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:58 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:58 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:58 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:58 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:49:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:49:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:49:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:49:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:49:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:05 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:11 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:11 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:11 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:11 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:11 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:11 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:11 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:16 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:16 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:16 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:16 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:16 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:16 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:16 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:16 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:16 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:16 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:16 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:23 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:23 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:29 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:30 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:30 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:30 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:30 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:30 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:30 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:34 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:34 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:35 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:41 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:55 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:55 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:50:55 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:50:55 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:50:55 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:50:55 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:50:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:50:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:50:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:50:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:50:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:50:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:50:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:50:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:50:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:50:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:03 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:03 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:07 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:07 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:07 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:09 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:09 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:14 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:18 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:20 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:20 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:20 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:20 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:33 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:33 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:33 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:33 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:33 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:33 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:33 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:33 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:38 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:38 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:38 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:38 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:38 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:38 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:38 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:39 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:39 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:39 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:39 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:39 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:40 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:40 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:40 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:40 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:40 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:40 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:40 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:51:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:51:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:51:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:51:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:51:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:51:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:51:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:05 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:05 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:05 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:05 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:05 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:05 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:07 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:20 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:52:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:52:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:28 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:28 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:28 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:33 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:33 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:33 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:33 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:33 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:33 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:33 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:33 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:33 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:33 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:34 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:34 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:34 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:35 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:41 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:41 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:53 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:53 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:53 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:55 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:55 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:55 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:55 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:52:55 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:52:55 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:55 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:52:56 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:52:56 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:52:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:03 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:03 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:03 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:03 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:09 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:10 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:15 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:15 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:15 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:16 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:31 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:31 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:31 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:39 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:39 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:39 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:39 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:39 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:39 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:39 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:39 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:39 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:39 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:56 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:56 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:56 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:56 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:56 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:57 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:57 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:57 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:57 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:53:57 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:53:57 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:53:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:53:57 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:53:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:05 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:10 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:10 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:10 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:20 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:20 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:20 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:20 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:28 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:28 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:28 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:28 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:28 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:28 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:33 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:33 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:33 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:33 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:35 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:35 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:40 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:40 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:40 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:40 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:40 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:40 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:40 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:50 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:51 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:51 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:51 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:54:58 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:54:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:54:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:54:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:54:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:03 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:03 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:26 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:29 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:29 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:29 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:29 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:29 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:30 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:30 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:30 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:34 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:34 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:34 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:45 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:45 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:45 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:45 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:55:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:55:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:55:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:55:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:55:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:55:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:55:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:55:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:55:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:55:58 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:55:58 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:55:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:55:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:55:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:55:58 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:09 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:10 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:18 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:19 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:19 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:23 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:35 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:35 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:35 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:35 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:51 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:51 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:51 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:51 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:52 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:52 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:56:52 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:56:52 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:56:52 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:56:52 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:56:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:56:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:56:57 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:56:57 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:56:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:56:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:56:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:56:57 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:56:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:56:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:56:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:57:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:57:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:57:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:57:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:09 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:13 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:57:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:57:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:57:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:57:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:22 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:57:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:57:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:57:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:30 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:30 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:34 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:34 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:57:34 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:34 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:34 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:34 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:57:34 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:34 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:57:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:57:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:51 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:51 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:51 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:57:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:52 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:52 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:52 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-13 17:57:52 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:52 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wild = []: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-13 17:57:52 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:57:52 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_ExtraFG") || M4_spin_reels_symbols[3].contains("WILD_ExtraFG")): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - break: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_Round_detail", ["partner":Partner, "M4_spin_round_id":M4_spin_round_id])): Send request and verify the response successfully

2019-08-13 17:57:52 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:57:52 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_round = new groovy.json.JsonSlurper(): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_round_detail = M4_round.parseText(response.getResponseBodyContent()): null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_round_object = M4_round_detail: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_round_object = M4_round_object: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_round_transaction_type = transaction_type: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_round_transaction_type = M4_round_transaction_type: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_round_player_id = player_id: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_round_player_id = M4_round_player_id: null

2019-08-13 17:57:52 - [TEST_STEP][PASSED] - M4_round_booster_type = booster_type: null

2019-08-13 17:57:57 - [TEST_STEP][PASSED] - M4_round_booster_type = M4_round_booster_type: null

2019-08-13 17:57:57 - [TEST_STEP][PASSED] - M4_round_currency = currency: null

2019-08-13 17:57:57 - [TEST_STEP][PASSED] - M4_round_currency = M4_round_currency: null

2019-08-13 17:57:57 - [TEST_STEP][PASSED] - M4_round_id = round_id: null

2019-08-13 17:57:57 - [TEST_STEP][PASSED] - M4_round_id = M4_round_id: null

2019-08-13 17:57:57 - [TEST_STEP][PASSED] - M4_round_transaction_id = transaction_id: null

2019-08-13 17:57:57 - [TEST_STEP][PASSED] - M4_round_transaction_id = M4_round_transaction_id: null

2019-08-13 17:57:57 - [TEST_STEP][PASSED] - M4_round_transaction_time = transaction_time: null

2019-08-13 17:57:57 - [TEST_STEP][PASSED] - M4_round_transaction_time = M4_round_transaction_time: null

2019-08-13 17:57:57 - [TEST_STEP][PASSED] - M4_round_total_win = total_win: null

2019-08-13 17:57:57 - [TEST_STEP][PASSED] - M4_round_total_win = M4_round_total_win: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_balance_long = balance: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_balance = Long.toString(M4_round_balance_long): null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_balance = M4_round_balance: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_total_bet = total_bet: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_total_bet = M4_round_total_bet: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_bet_value = bet_value: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_bet_value = M4_round_bet_value: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_line = line: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_line = M4_round_line: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels1 = reels[0]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels1 = M4_round_reels1: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels2 = reels[1]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels2 = M4_round_reels2: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels3 = reels[2]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels3 = M4_round_reels3: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels4 = reels[3]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels4 = M4_round_reels4: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels5 = reels[4]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels5 = M4_round_reels5: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_F_reels1 = reels[0]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_F_reels1 = M4_round_F_reels1: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_F_reels2 = reels[1]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_F_reels2 = M4_round_F_reels2: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_F_reels3 = reels[2]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_F_reels3 = M4_round_F_reels3: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_F_reels4 = reels[3]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_F_reels4 = M4_round_F_reels4: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_F_reels5 = reels[4]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_F_reels5 = M4_round_F_reels5: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = symbols[0]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = M4_round_reels0_symbols1: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = symbols[1]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = M4_round_reels0_symbols2: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = symbols[2]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = M4_round_reels0_symbols3: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = symbols[0]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = M4_round_reels1_symbols1: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = symbols[1]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = M4_round_reels1_symbols2: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = symbols[2]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = M4_round_reels1_symbols3: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels1_symbols4 = symbols[3]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = symbol: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = M4_round_reels_symbols_all: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_features_triggered = features_triggered: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_features_complete = complete: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_features_complete = M4_round_features_complete: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_free_spins_left = free_spins_left: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_free_spins_left = M4_round_free_spins_left: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = total_free_spin_count: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = M4_round_total_free_spin_count: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = total_free_spin_win_amount: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = M4_round_total_free_spin_win_amount: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_subfeatures = subfeatures: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_subfeatures = M4_round_subfeatures: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = wild_multiplier: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = M4_round_wild_multiplier: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_wild_config = wild_config: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_wild_config = M4_round_wild_config: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_wild_config_index = index: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_original_reels = original_reels: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_original_reels = M4_round_original_reels: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_swapped_reels = swapped_reels: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_swapped_reels = M4_round_swapped_reels: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_free_spins_added = free_spins_added: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_spin_result_list = spin_results[0]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_feature_state = feature_state: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_feature_state = M4_round_feature_state: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_feature_state_all = feature_state: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_feature_state_all = M4_round_feature_state_all: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_features_type = type: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_features_type = M4_round_features_type: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_scatter_win = scatter_win: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_scatter_win = M4_round_scatter_win: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_spin_result1 = spin_results[1]: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_spin_result1 = M4_round_spin_result1: null

2019-08-13 17:58:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:58:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - extraFreeSpinIndex = -1: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - extraFreeSpinFeatureStateKeys = null: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_round_features_triggered.size(), (i++)]): null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - if (type.equals("EXTRA_FREE_SPIN")): null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - if (type.equals("EXTRA_FREE_SPIN")): null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - if (type.equals("EXTRA_FREE_SPIN")): null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - extraFreeSpinIndex = i: null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - extraFreeSpinFeatureStateKeys = feature_state.keySet(): null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - println(extraFreeSpinIndex): null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - println(extraFreeSpinFeatureStateKeys): null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - listOfKeys = new java.util.ArrayList(extraFreeSpinFeatureStateKeys): null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - Collections.sort(listOfKeys): null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - Collections.sort(ExtraFG): null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - println("listOfKeys is:" + listOfKeys): null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - println("ExtraFG is:" + ExtraFG): null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - assert listOfKeys.equals(ExtraFG): null

2019-08-13 17:58:00 - [TEST_STEP][PASSED] - callTestCase(findTestCase("STG_env/compare_values/3_ExtraFG_verify_value"), ["Partner":Partner, "Userid":Userid, "Game_code":Game_code, "url_krug_gw":url_krug_gw, "secret_key":secret_key, "M4_recorder":M4_recorder]): Call Test Case 'Test Cases/STG_env/compare_values/3_ExtraFG_verify_value' successfully

2019-08-13 17:58:01 - [TEST_CASE][PASSED] - Test Cases/STG_env/compare_values/3_ExtraFG_verify_value: Test Cases/STG_env/compare_values/3_ExtraFG_verify_value

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("STG/Wallet/Get_Session_Token", ["url_krug_gw":url_krug_gw, "partner":Partner, "secret_key":secret_key, "userid":Userid])): Send request and verify the response successfully

2019-08-13 17:58:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:58:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - getResponseText()).contains("session_token"): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - getsession = new groovy.json.JsonSlurper(): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - result_getsession = getsession.parseText(response.getResponseBodyContent()): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - println("...value extracted is :" + session_token): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - println("GlobalVariable is :" + session_token): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-13 17:58:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:58:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - M4_login = sendRequestAndVerify(findTestObject("STG/RGS(M4)/M4_Login", ["partner":Partner, "game_code":Game_code, "session_token":session_token])): Send request and verify the response successfully

2019-08-13 17:58:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:58:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - M4_login = new groovy.json.JsonSlurper(): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - result_M4_login = M4_login.parseText(response.getResponseBodyContent()): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - M4_login_user_id = user_id: null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - println("playerid is: " + M4_login_user_id): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-13 17:58:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:58:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - M4_init = sendRequestAndVerify(findTestObject("STG/RGS(M4)/M4_init", ["partner":Partner, "M4_recorder":M4_recorder, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-13 17:58:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:58:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - M4_init = new groovy.json.JsonSlurper(): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - result_M4_init = M4_init.parseText(response.getResponseBodyContent()): null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - rgs_session_token = session_token: null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - M4_init_balance = balance: null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - M4_init_balance = M4_init_balance: null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - game_code = genesis_id: null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - game_code = game_code: null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - M4_free_round = free_round: null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - M4_free_round = M4_free_round: null

2019-08-13 17:58:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:58:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-13 17:58:01 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("STG/RGS(M4)/1_Round_detail", ["partner":Partner, "M4_spin_round_id":M4_spin_round_id])): Send request and verify the response successfully

2019-08-13 17:58:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-13 17:58:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round = new groovy.json.JsonSlurper(): null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_detail = M4_round.parseText(response.getResponseBodyContent()): null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_object = M4_round_detail: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_object = M4_round_object: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_transaction_type = transaction_type: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_transaction_type = M4_round_transaction_type: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_player_id = player_id: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_player_id = M4_round_player_id: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_booster_type = booster_type: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_booster_type = M4_round_booster_type: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_currency = currency: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_currency = M4_round_currency: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_id = round_id: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_id = M4_round_id: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_transaction_id = transaction_id: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_transaction_id = M4_round_transaction_id: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_transaction_time = transaction_time: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_transaction_time = M4_round_transaction_time: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_total_win = total_win: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_total_win = M4_round_total_win: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_balance_long = balance: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_balance = Long.toString(M4_round_balance_long): null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_balance = M4_round_balance: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_total_bet = total_bet: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_total_bet = M4_round_total_bet: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_bet_value = bet_value: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_bet_value = M4_round_bet_value: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_line = line: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_line = M4_round_line: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels1 = reels[0]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels1 = M4_round_reels1: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels2 = reels[1]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels2 = M4_round_reels2: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels3 = reels[2]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels3 = M4_round_reels3: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels4 = reels[3]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels4 = M4_round_reels4: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels5 = reels[4]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels5 = M4_round_reels5: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_F_reels1 = reels[0]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_F_reels1 = M4_round_F_reels1: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_F_reels2 = reels[1]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_F_reels2 = M4_round_F_reels2: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_F_reels3 = reels[2]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_F_reels3 = M4_round_F_reels3: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_F_reels4 = reels[3]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_F_reels4 = M4_round_F_reels4: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_F_reels5 = reels[4]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_F_reels5 = M4_round_F_reels5: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = symbols[0]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = M4_round_reels0_symbols1: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = symbols[1]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = M4_round_reels0_symbols2: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = symbols[2]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = M4_round_reels0_symbols3: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = symbols[0]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = M4_round_reels1_symbols1: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = symbols[1]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = M4_round_reels1_symbols2: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = symbols[2]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = M4_round_reels1_symbols3: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels1_symbols4 = symbols[3]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = symbol: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = M4_round_reels_symbols_all: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_features_triggered = features_triggered: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_features_complete = complete: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_features_complete = M4_round_features_complete: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_free_spins_left = free_spins_left: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_free_spins_left = M4_round_free_spins_left: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = total_free_spin_count: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = M4_round_total_free_spin_count: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = total_free_spin_win_amount: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = M4_round_total_free_spin_win_amount: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_subfeatures = subfeatures: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_subfeatures = M4_round_subfeatures: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = wild_multiplier: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = M4_round_wild_multiplier: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_wild_config = wild_config: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_wild_config = M4_round_wild_config: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_wild_config_index = index: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_original_reels = original_reels: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_original_reels = M4_round_original_reels: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_swapped_reels = swapped_reels: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_swapped_reels = M4_round_swapped_reels: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_free_spins_added = free_spins_added: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_spin_result_list = spin_results[0]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_feature_state = feature_state: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_feature_state = M4_round_feature_state: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_feature_state_all = feature_state: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_feature_state_all = M4_round_feature_state_all: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_features_type = type: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_features_type = M4_round_features_type: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_scatter_win = scatter_win: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_scatter_win = M4_round_scatter_win: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_spin_result1 = spin_results[1]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_spin_result1 = M4_round_spin_result1: null

2019-08-13 17:58:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-13 17:58:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - extraFreeSpinIndex = -1: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - extraFreeSpinFeatureStateKeys = null: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - extraFreeSpinTypeAndComplete = false: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - extraFreeSpinLeft = "": null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - extraFreeSpinAdded = "": null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_round_features_triggered.size(), (i++)]): null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - if (type.equals("EXTRA_FREE_SPIN") &amp;&amp; complete == true): null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - if (type.equals("EXTRA_FREE_SPIN") &amp;&amp; complete == true): null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - if (type.equals("EXTRA_FREE_SPIN") &amp;&amp; complete == true): null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - extraFreeSpinTypeAndComplete = true: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - extraFreeSpinIndex = i: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - extraFreeSpinLeft = free_spins_left: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - extraFreeSpinAdded = free_spins_added: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - println(extraFreeSpinIndex): null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - freeSpinLeft = free_spins_left: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - println("extraFreeSpinTypeAndComplete is:" + extraFreeSpinTypeAndComplete): null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - println("extraFreeSpinLeft is: " + extraFreeSpinLeft): null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - println("extraFreeSpinAdded is: " + extraFreeSpinAdded): null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - assert extraFreeSpinTypeAndComplete == true: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - assert extraFreeSpinLeft &gt; freeSpinLeft: null

2019-08-13 17:58:02 - [TEST_STEP][PASSED] - assert extraFreeSpinAdded == extraFreeSpinLeft - freeSpinLeft: null

2019-08-13 17:58:02 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/STG_env/compare_values/3_ExtraFG_verify_value' successfully</system-out>
            <system-err></system-err>
        </testcase>
        <system-out>2019-08-13 17:46:53 - [TEST_SUITE][PASSED] - 3_ExtraFG: Test Cases/STG_env/3_ExtraFG_CALL</system-out>
        <system-err></system-err>
    </testsuite>
</testsuites>
