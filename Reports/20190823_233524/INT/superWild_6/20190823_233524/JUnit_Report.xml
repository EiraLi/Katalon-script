<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites name="superWild_6" time="699" tests="1" failures="0" errors="0">
    <testsuite name="superWild_6" tests="1" failures="0" errors="0" time="699" timestamp="2019-08-23 23:35:36" hostname="eiralee - 172.20.10.2" id="Test Suites/INT/superWild_6">
        <properties>
            <property name="deviceName" value=""/>
            <property name="devicePlatform" value=""/>
            <property name="logFolder" value="/Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524"/>
            <property name="logFiles" value="/Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/execution0.log"/>
            <property name="attachments" value=""/>
            <property name="hostName" value="eiralee - 172.20.10.2"/>
            <property name="hostAddress" value="172.20.10.2"/>
            <property name="os" value="Mac OS X 64bit"/>
            <property name="katalonVersion" value="6.3.1.2"/>
        </properties>
        <testcase name="Test Cases/INT_env/6_Normal_CALL" classname="Test Cases/INT_env/6_Normal_CALL" status="PASSED">
            <system-out>2019-08-23 23:35:36 - [TEST_CASE][PASSED] - Test Cases/INT_env/6_Normal_CALL: Test Cases/INT_env/6_Normal_CALL

2019-08-23 23:35:38 - [TEST_STEP][PASSED] - Normal = new java.util.ArrayList(): null

2019-08-23 23:35:38 - [TEST_STEP][PASSED] - Normal.add("type"): null

2019-08-23 23:35:38 - [TEST_STEP][PASSED] - Normal.add("complete"): null

2019-08-23 23:35:38 - [TEST_STEP][PASSED] - Normal.add("feature_state"): null

2019-08-23 23:35:38 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/Wallet/Get_Session_Token", ["url_krug_gw":url_krug_gw, "partner":Partner, "secret_key":secret_key, "userid":Userid])): Send request and verify the response successfully

2019-08-23 23:35:39 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/0.har

2019-08-23 23:35:39 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:35:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:35:39 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:35:39 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:35:39 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:35:39 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:35:40 - [TEST_STEP][PASSED] - getResponseText()).contains("session_token"): null

2019-08-23 23:35:40 - [TEST_STEP][PASSED] - getsession = new groovy.json.JsonSlurper(): null

2019-08-23 23:35:40 - [TEST_STEP][PASSED] - result_getsession = getsession.parseText(response.getResponseBodyContent()): null

2019-08-23 23:35:40 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-23 23:35:40 - [TEST_STEP][PASSED] - println("...value extracted is :" + session_token): null

2019-08-23 23:35:40 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-23 23:35:41 - [TEST_STEP][PASSED] - println("GlobalVariable is :" + session_token): null

2019-08-23 23:35:41 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-23 23:35:41 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-23 23:35:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:35:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:35:41 - [TEST_STEP][PASSED] - M4_login = sendRequestAndVerify(findTestObject("INT/RGS(M4)/M4_Login", ["partner":Partner, "game_code":Game_code, "session_token":session_token])): Send request and verify the response successfully

2019-08-23 23:35:42 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/1.har

2019-08-23 23:35:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:35:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:35:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:35:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:35:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:35:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:35:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:35:42 - [TEST_STEP][PASSED] - M4_login = new groovy.json.JsonSlurper(): null

2019-08-23 23:35:42 - [TEST_STEP][PASSED] - result_M4_login = M4_login.parseText(response.getResponseBodyContent()): null

2019-08-23 23:35:42 - [TEST_STEP][PASSED] - M4_login_user_id = user_id: null

2019-08-23 23:35:42 - [TEST_STEP][PASSED] - println("playerid is: " + M4_login_user_id): null

2019-08-23 23:35:42 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-23 23:35:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:35:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:35:42 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-23 23:35:42 - [TEST_STEP][PASSED] - M4_init = sendRequestAndVerify(findTestObject("INT/RGS(M4)/M4_init", ["partner":Partner, "M4_recorder":M4_recorder, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-23 23:35:42 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/2.har

2019-08-23 23:35:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:35:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_init = new groovy.json.JsonSlurper(): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - result_M4_init = M4_init.parseText(response.getResponseBodyContent()): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - rgs_session_token = session_token: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_init_balance = balance: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_init_balance = M4_init_balance: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - game_code = genesis_id: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - game_code = game_code: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_free_round = free_round: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_free_round = M4_free_round: null

2019-08-23 23:35:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:35:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt;= 1000, (i++)]): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:35:43 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/3.har

2019-08-23 23:35:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:35:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:35:43 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:35:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:35:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:35:44 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/4.har

2019-08-23 23:35:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:35:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:35:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:35:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:35:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:35:45 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/5.har

2019-08-23 23:35:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:35:45 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:35:45 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:35:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:35:45 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/6.har

2019-08-23 23:35:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:35:45 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:35:45 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:35:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:35:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:35:46 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/7.har

2019-08-23 23:35:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:35:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:35:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:35:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:35:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:35:47 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/8.har

2019-08-23 23:35:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:35:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:35:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:35:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:35:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:35:47 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/9.har

2019-08-23 23:35:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:35:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:35:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:36:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:36:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:36:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:36:09 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/10.har

2019-08-23 23:36:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:36:09 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:36:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:36:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:36:09 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/11.har

2019-08-23 23:36:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:36:09 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:36:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:36:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:36:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:36:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:36:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:36:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:36:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:36:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:36:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:36:45 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:36:45 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:36:45 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:36:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:36:45 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:36:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:36:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:36:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:36:45 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:36:46 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/12.har

2019-08-23 23:36:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:36:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:36:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:36:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:36:46 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/13.har

2019-08-23 23:36:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:36:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:36:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:36:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:36:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:36:47 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/14.har

2019-08-23 23:36:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:36:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:36:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:37:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:37:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:37:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:37:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:37:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:37:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:37:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:37:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:37:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:37:13 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/15.har

2019-08-23 23:37:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:37:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:37:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:37:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:37:13 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/16.har

2019-08-23 23:37:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:37:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:37:28 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:37:28 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:37:28 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:37:29 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/17.har

2019-08-23 23:37:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:37:29 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:37:29 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:37:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:37:29 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:37:30 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/18.har

2019-08-23 23:37:30 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:37:30 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:37:30 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:38:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:38:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:38:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:38:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:38:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:38:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:38:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:38:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:38:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:38:06 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:38:06 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:38:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:38:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:38:06 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:38:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:38:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:38:06 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/19.har

2019-08-23 23:38:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:38:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:38:07 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:38:07 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:38:07 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:38:07 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/20.har

2019-08-23 23:38:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:38:07 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:38:07 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:38:07 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:07 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:38:08 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/21.har

2019-08-23 23:38:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:38:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:38:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:38:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:38:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:38:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:38:24 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/22.har

2019-08-23 23:38:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:38:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:38:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:38:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:38:25 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/23.har

2019-08-23 23:38:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:38:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:38:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:38:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:38:50 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/24.har

2019-08-23 23:38:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:38:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:38:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:38:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:50 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:38:51 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/25.har

2019-08-23 23:38:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:38:51 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:38:51 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:38:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:38:51 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/26.har

2019-08-23 23:38:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:38:51 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:38:51 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:38:55 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:39:16 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:39:16 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:39:16 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:39:17 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/27.har

2019-08-23 23:39:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:39:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:39:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:39:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:39:17 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/28.har

2019-08-23 23:39:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:39:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:39:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:39:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:39:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:39:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:39:43 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/29.har

2019-08-23 23:39:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:39:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:39:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:39:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:39:44 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/30.har

2019-08-23 23:39:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:39:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:39:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:39:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:39:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:39:45 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/31.har

2019-08-23 23:40:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:40:09 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:40:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:40:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:40:09 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:40:10 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/32.har

2019-08-23 23:40:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:40:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:40:10 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:40:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:40:10 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/33.har

2019-08-23 23:40:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:40:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:40:11 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:40:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:40:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:40:15 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:40:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:40:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:41:07 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:41:07 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:07 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:41:08 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/34.har

2019-08-23 23:41:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:41:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:41:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:41:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:41:09 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/35.har

2019-08-23 23:41:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:41:09 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:41:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:41:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:09 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:41:10 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/36.har

2019-08-23 23:41:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:41:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:41:10 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:41:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:41:10 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/37.har

2019-08-23 23:41:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:41:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:41:10 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:41:10 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:41:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:41:29 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:41:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:41:35 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/38.har

2019-08-23 23:41:35 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:41:35 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:41:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:41:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:41:36 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/39.har

2019-08-23 23:41:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:41:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:41:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:41:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:41:36 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/40.har

2019-08-23 23:41:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:41:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:41:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:41:40 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:41:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:41:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:41:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:40 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:41:40 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:41:40 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:41:40 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:41:40 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:41:40 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:41:40 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:41:40 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:41:40 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:41:40 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:41:55 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:41:55 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:55 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:41:56 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/41.har

2019-08-23 23:41:56 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:41:56 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:41:56 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:41:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:41:56 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/42.har

2019-08-23 23:41:56 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:41:56 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:41:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:42:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:42:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:42:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:42:48 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/43.har

2019-08-23 23:42:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:42:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:42:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:42:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:42:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:42:49 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/44.har

2019-08-23 23:42:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:42:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:42:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:42:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:42:49 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/45.har

2019-08-23 23:42:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:42:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:42:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:42:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:42:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:42:50 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/46.har

2019-08-23 23:42:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:42:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:42:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:42:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:42:50 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:42:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:43:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:43:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:43:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:43:15 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/47.har

2019-08-23 23:43:15 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:43:15 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:43:15 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:43:15 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:43:15 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:43:16 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/48.har

2019-08-23 23:43:16 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:43:16 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:43:16 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:43:16 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:43:16 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/49.har

2019-08-23 23:43:16 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:43:16 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:43:16 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:43:20 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:43:20 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:43:20 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:43:20 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:43:40 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:43:40 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:43:40 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:43:40 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/50.har

2019-08-23 23:43:40 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:43:41 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:43:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:43:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:43:41 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/51.har

2019-08-23 23:43:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:43:41 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:43:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:43:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:43:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:44:32 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:44:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:44:32 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/52.har

2019-08-23 23:44:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:44:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:44:33 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:44:33 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:44:33 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:44:33 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/53.har

2019-08-23 23:44:33 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:44:33 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:44:34 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:44:34 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:44:34 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:44:34 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/54.har

2019-08-23 23:44:34 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:44:34 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:44:34 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:44:34 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:44:34 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:44:35 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/55.har

2019-08-23 23:44:35 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:44:35 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:44:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:44:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:44:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:44:36 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/56.har

2019-08-23 23:44:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:44:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:44:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:44:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:44:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:44:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:44:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:44:59 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/57.har

2019-08-23 23:44:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:44:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:44:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:44:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:44:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:45:00 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/58.har

2019-08-23 23:45:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:45:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:45:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:45:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:45:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:45:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:45:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:45:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:45:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:45:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:45:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:45:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:45:51 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:45:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:45:51 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:45:52 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/59.har

2019-08-23 23:45:52 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:45:52 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:45:52 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:45:52 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:45:52 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:45:53 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/60.har

2019-08-23 23:45:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:45:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:45:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:45:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:45:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:45:53 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/61.har

2019-08-23 23:45:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:45:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:45:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:45:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:45:54 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/62.har

2019-08-23 23:45:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:45:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:45:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:46:18 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:46:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Normal") || M4_spin_reels_symbols[3].contains("WILD_Normal") || M4_spin_reels_symbols[4].contains("WILD_Normal")): null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - break: null

2019-08-23 23:46:18 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_Round_detail", ["partner":Partner, "M4_spin_round_id":M4_spin_round_id])): Send request and verify the response successfully

2019-08-23 23:46:19 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/63.har

2019-08-23 23:46:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:46:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round = new groovy.json.JsonSlurper(): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_detail = M4_round.parseText(response.getResponseBodyContent()): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_object = M4_round_detail: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_object = M4_round_object: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_transaction_type = transaction_type: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_transaction_type = M4_round_transaction_type: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_player_id = player_id: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_player_id = M4_round_player_id: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_booster_type = booster_type: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_booster_type = M4_round_booster_type: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_currency = currency: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_currency = M4_round_currency: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_id = round_id: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_id = M4_round_id: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_transaction_id = transaction_id: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_transaction_id = M4_round_transaction_id: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_transaction_time = transaction_time: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_transaction_time = M4_round_transaction_time: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_total_win = total_win: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_total_win = M4_round_total_win: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_balance_long = balance: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_balance = Long.toString(M4_round_balance_long): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_balance = M4_round_balance: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_total_bet = total_bet: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_total_bet = M4_round_total_bet: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_bet_value = bet_value: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_bet_value = M4_round_bet_value: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_line = line: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_line = M4_round_line: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels1 = reels[0]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels1 = M4_round_reels1: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels2 = reels[1]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels2 = M4_round_reels2: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels3 = reels[2]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels3 = M4_round_reels3: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels4 = reels[3]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels4 = M4_round_reels4: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels5 = reels[4]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels5 = M4_round_reels5: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_F_reels1 = reels[0]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_F_reels1 = M4_round_F_reels1: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_F_reels2 = reels[1]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_F_reels2 = M4_round_F_reels2: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_F_reels3 = reels[2]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_F_reels3 = M4_round_F_reels3: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_F_reels4 = reels[3]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_F_reels4 = M4_round_F_reels4: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_F_reels5 = reels[4]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_F_reels5 = M4_round_F_reels5: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = symbols[0]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = M4_round_reels0_symbols1: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = symbols[1]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = M4_round_reels0_symbols2: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = symbols[2]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = M4_round_reels0_symbols3: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = symbols[0]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = M4_round_reels1_symbols1: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = symbols[1]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = M4_round_reels1_symbols2: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = symbols[2]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = M4_round_reels1_symbols3: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols4 = symbols[3]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = symbol: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = M4_round_reels_symbols_all: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_features_triggered = features_triggered: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_features_complete = complete: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_features_complete = M4_round_features_complete: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_free_spins_left = free_spins_left: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_free_spins_left = M4_round_free_spins_left: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = total_free_spin_count: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = M4_round_total_free_spin_count: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = total_free_spin_win_amount: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = M4_round_total_free_spin_win_amount: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_subfeatures = subfeatures: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_subfeatures = M4_round_subfeatures: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = wild_multiplier: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = M4_round_wild_multiplier: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_wild_config = wild_config: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_wild_config = M4_round_wild_config: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_wild_config_index = index: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_free_spin_left = free_spins_lef: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_free_spin_left = M4_round_free_spin_left: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_original_reels = original_reels: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_original_reels = M4_round_original_reels: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_swapped_reels = swapped_reels: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_swapped_reels = M4_round_swapped_reels: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_free_spins_added = free_spins_added: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_spin_result_list = spin_results[0]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_feature_state = feature_state: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_feature_state = M4_round_feature_state: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_feature_state_all = feature_state: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_feature_state_all = M4_round_feature_state_all: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_features_type = type: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_features_type = M4_round_features_type: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_scatter_win = scatter_win: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_scatter_win = M4_round_scatter_win: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_spin_result1 = spin_results[1]: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_spin_result1 = M4_round_spin_result1: null

2019-08-23 23:46:19 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:46:19 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - wildNormalIndex = -1: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - wildNormalFeatureStateKeys = null: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_round_features_triggered.size(), (i++)]): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - if (type.equals("NORMAL_FREE_SPIN")): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - wildNormalIndex = i: null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - wildNormalFeatureStateKeys = M4_round_features_triggered[i].keySet(): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - if (type.equals("NORMAL_FREE_SPIN")): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - if (type.equals("NORMAL_FREE_SPIN")): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - if (type.equals("NORMAL_FREE_SPIN")): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - println(wildNormalIndex): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - println(wildNormalFeatureStateKeys): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - Normal_keys = new java.util.ArrayList(wildNormalFeatureStateKeys): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - Collections.sort(Normal_keys): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - Collections.sort(Normal): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - println("Normal_keys is:" + Normal_keys): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - println("Normal is:" + Normal): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - assert Normal_keys.equals(Normal): null

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - callTestCase(findTestCase("INT_env/compare_values/6_Normal_verify_value"), ["Partner":Partner, "Userid":Userid, "Game_code":Game_code, "url_krug_gw":url_krug_gw, "secret_key":secret_key, "M4_recorder":M4_recorder]): Call Test Case 'Test Cases/INT_env/compare_values/6_Normal_verify_value' successfully

2019-08-23 23:46:19 - [TEST_CASE][PASSED] - Test Cases/INT_env/compare_values/6_Normal_verify_value: Test Cases/INT_env/compare_values/6_Normal_verify_value

2019-08-23 23:46:19 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/Wallet/Get_Session_Token", ["url_krug_gw":url_krug_gw, "partner":Partner, "secret_key":secret_key, "userid":Userid])): Send request and verify the response successfully

2019-08-23 23:46:19 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/64.har

2019-08-23 23:46:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:46:20 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - getResponseText()).contains("session_token"): null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - getsession = new groovy.json.JsonSlurper(): null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - result_getsession = getsession.parseText(response.getResponseBodyContent()): null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - println("...value extracted is :" + session_token): null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - println("GlobalVariable is :" + session_token): null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-23 23:46:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:46:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - M4_login = sendRequestAndVerify(findTestObject("INT/RGS(M4)/M4_Login", ["partner":Partner, "game_code":Game_code, "session_token":session_token])): Send request and verify the response successfully

2019-08-23 23:46:20 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/65.har

2019-08-23 23:46:20 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:46:20 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - M4_login = new groovy.json.JsonSlurper(): null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - result_M4_login = M4_login.parseText(response.getResponseBodyContent()): null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - M4_login_user_id = user_id: null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - println("playerid is: " + M4_login_user_id): null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-23 23:46:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:46:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-23 23:46:20 - [TEST_STEP][PASSED] - M4_init = sendRequestAndVerify(findTestObject("INT/RGS(M4)/M4_init", ["partner":Partner, "M4_recorder":M4_recorder, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-23 23:46:20 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/66.har

2019-08-23 23:46:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:46:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - M4_init = new groovy.json.JsonSlurper(): null

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - result_M4_init = M4_init.parseText(response.getResponseBodyContent()): null

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - rgs_session_token = session_token: null

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - M4_init_balance = balance: null

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - M4_init_balance = M4_init_balance: null

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - game_code = genesis_id: null

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - game_code = game_code: null

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - M4_free_round = free_round: null

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - M4_free_round = M4_free_round: null

2019-08-23 23:46:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:46:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-23 23:46:21 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_Round_detail", ["partner":Partner, "M4_spin_round_id":M4_spin_round_id])): Send request and verify the response successfully

2019-08-23 23:46:21 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/67.har

2019-08-23 23:46:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:46:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round = new groovy.json.JsonSlurper(): null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_detail = M4_round.parseText(response.getResponseBodyContent()): null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_object = M4_round_detail: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_object = M4_round_object: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_transaction_type = transaction_type: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_transaction_type = M4_round_transaction_type: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_player_id = player_id: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_player_id = M4_round_player_id: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_booster_type = booster_type: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_booster_type = M4_round_booster_type: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_currency = currency: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_currency = M4_round_currency: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_id = round_id: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_id = M4_round_id: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_transaction_id = transaction_id: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_transaction_id = M4_round_transaction_id: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_transaction_time = transaction_time: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_transaction_time = M4_round_transaction_time: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_total_win = total_win: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_total_win = M4_round_total_win: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_balance_long = balance: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_balance = Long.toString(M4_round_balance_long): null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_balance = M4_round_balance: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_total_bet = total_bet: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_total_bet = M4_round_total_bet: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_bet_value = bet_value: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_bet_value = M4_round_bet_value: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_line = line: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_line = M4_round_line: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels1 = reels[0]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels1 = M4_round_reels1: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels2 = reels[1]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels2 = M4_round_reels2: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels3 = reels[2]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels3 = M4_round_reels3: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels4 = reels[3]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels4 = M4_round_reels4: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels5 = reels[4]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels5 = M4_round_reels5: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_F_reels1 = reels[0]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_F_reels1 = M4_round_F_reels1: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_F_reels2 = reels[1]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_F_reels2 = M4_round_F_reels2: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_F_reels3 = reels[2]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_F_reels3 = M4_round_F_reels3: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_F_reels4 = reels[3]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_F_reels4 = M4_round_F_reels4: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_F_reels5 = reels[4]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_F_reels5 = M4_round_F_reels5: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = symbols[0]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = M4_round_reels0_symbols1: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = symbols[1]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = M4_round_reels0_symbols2: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = symbols[2]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = M4_round_reels0_symbols3: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = symbols[0]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = M4_round_reels1_symbols1: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = symbols[1]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = M4_round_reels1_symbols2: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = symbols[2]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = M4_round_reels1_symbols3: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels1_symbols4 = symbols[3]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = symbol: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = M4_round_reels_symbols_all: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_features_triggered = features_triggered: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_features_complete = complete: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_features_complete = M4_round_features_complete: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_free_spins_left = free_spins_left: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_free_spins_left = M4_round_free_spins_left: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = total_free_spin_count: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = M4_round_total_free_spin_count: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = total_free_spin_win_amount: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = M4_round_total_free_spin_win_amount: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_subfeatures = subfeatures: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_subfeatures = M4_round_subfeatures: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = wild_multiplier: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = M4_round_wild_multiplier: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_wild_config = wild_config: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_wild_config = M4_round_wild_config: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_wild_config_index = index: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_free_spin_left = free_spins_lef: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_free_spin_left = M4_round_free_spin_left: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_original_reels = original_reels: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_original_reels = M4_round_original_reels: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_swapped_reels = swapped_reels: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_swapped_reels = M4_round_swapped_reels: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_free_spins_added = free_spins_added: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_spin_result_list = spin_results[0]: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_feature_state = feature_state: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_feature_state = M4_round_feature_state: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_feature_state_all = feature_state: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_feature_state_all = M4_round_feature_state_all: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_features_type = type: null

2019-08-23 23:46:22 - [TEST_STEP][PASSED] - M4_round_features_type = M4_round_features_type: null

2019-08-23 23:46:23 - [TEST_STEP][PASSED] - M4_round_scatter_win = scatter_win: null

2019-08-23 23:46:23 - [TEST_STEP][PASSED] - M4_round_scatter_win = M4_round_scatter_win: null

2019-08-23 23:46:23 - [TEST_STEP][PASSED] - M4_round_spin_result1 = spin_results[1]: null

2019-08-23 23:46:23 - [TEST_STEP][PASSED] - M4_round_spin_result1 = M4_round_spin_result1: null

2019-08-23 23:46:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:46:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:46:23 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-23 23:46:23 - [TEST_STEP][PASSED] - wildNormalIndexl = -1: null

2019-08-23 23:46:23 - [TEST_STEP][PASSED] - extraFreeSpinTypeAndComplete = false: null

2019-08-23 23:46:23 - [TEST_STEP][PASSED] - feature_state = "": null

2019-08-23 23:47:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_round_features_triggered.size(), (i++)]): null

2019-08-23 23:47:10 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-23 23:47:10 - [TEST_STEP][PASSED] - if (type.equals("NORMAL_FREE_SPIN") &amp;&amp; complete == true): null

2019-08-23 23:47:10 - [TEST_STEP][PASSED] - extraFreeSpinTypeAndComplete = true: null

2019-08-23 23:47:10 - [TEST_STEP][PASSED] - wildNormalIndexl = i: null

2019-08-23 23:47:10 - [TEST_STEP][PASSED] - feature_state = feature_state: null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - if (type.equals("NORMAL_FREE_SPIN") &amp;&amp; complete == true): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - if (type.equals("NORMAL_FREE_SPIN") &amp;&amp; complete == true): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - if (type.equals("NORMAL_FREE_SPIN") &amp;&amp; complete == true): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - println(wildNormalIndexl): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - println("feature state is:" + feature_state): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - feature_state_key = feature_state.keySet(): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - feature_state_list = new java.util.ArrayList(feature_state_key): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - subfeatures = new java.util.ArrayList(): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - subfeatures.add("FREE_SPIN"): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - feature_trigger = features_triggered: null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - total_free_spin_count = "": null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - free_spins_left = "": null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - total_free_spin_win_amount = "": null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; feature_trigger.size(), (i++)]): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - feature_type = type: null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - if (feature_type == "FREE_SPIN"): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - feature_type = type: null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - if (feature_type == "FREE_SPIN"): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - feature_type = type: null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - if (feature_type == "FREE_SPIN"): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - feature_type = type: null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - if (feature_type == "FREE_SPIN"): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - subfeatures_list = subfeatures: null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; subfeatures_list.size(), (j++)]): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - subfeatures.add(subfeatures_list[j]): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - subfeatures.add(subfeatures_list[j]): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - subfeatures.add(subfeatures_list[j]): null

2019-08-23 23:47:15 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/RGS(M4)/Summary_history", ["game_code":"SW_M4_V1_RECORDER", "partner":Partner, "userid":Userid])): Send request and verify the response successfully

2019-08-23 23:47:16 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_233524/INT/superWild_6/20190823_233524/requests/main/68.har

2019-08-23 23:47:16 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:47:16 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_detail = new groovy.json.JsonSlurper(): null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_history = summary_detail.parseText(response.getResponseBodyContent()): null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_top_level = summary_history: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_top_level = summary_top_level: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_data = data: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_data = summary_data: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_query = query: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_query = summary_query: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_payload = payload: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_payload = summary_payload: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_round_id_1 = round_id: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_round_id_1 = summary_round_id_1: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_total_bet_1 = total_bet: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_total_bet_1 = summary_total_bet_1: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_bet_value_1 = bet_value: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_bet_value_1 = summary_bet_value_1: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_total_win_1 = total_win: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_total_win_1 = summary_total_win_1: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_balance_1 = balance: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_balance_1 = summary_balance_1: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_date_1 = date: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_date_1 = summary_date_1: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_round_type_1 = round_type: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_round_type_1 = summary_round_type_1: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_bonus_provider_1 = bonus_provider: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_bonus_provider_1 = summary_bonus_provider_1: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_booster_type_1 = booster_type: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_booster_type_1 = summary_booster_type_1: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_with_free_spin_1 = with_free_spin: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_with_free_spin_1 = summary_with_free_spin_1: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_feature_track_1 = feature_track: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_feature_track_1 = summary_feature_track_1: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_totalCount = totalCount: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - summary_totalCount = summary_totalCount: null

2019-08-23 23:47:16 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:47:16 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - Collections.sort(subfeatures): null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - Collections.sort(summary_feature_track_1): null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - println("GlobalVariable.summary_feature_track_1 is: " + summary_feature_track_1): null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - println("subfeatures is: " + subfeatures): null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - println("feature_state_list is:" + feature_state_list): null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - println("GlobalVariable.summary_with_free_spin_1 is: " + summary_with_free_spin_1): null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - assert feature_state_list.size() == 0: null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - assert subfeatures.equals(summary_feature_track_1): null

2019-08-23 23:47:16 - [TEST_STEP][PASSED] - assert summary_with_free_spin_1 == true: null

2019-08-23 23:47:16 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/INT_env/compare_values/6_Normal_verify_value' successfully</system-out>
            <system-err></system-err>
        </testcase>
        <system-out>2019-08-23 23:35:36 - [TEST_SUITE][INCOMPLETE] - superWild_6: null</system-out>
        <system-err>2019-08-23 23:35:36 - [TEST_SUITE][INCOMPLETE] - superWild_6: null</system-err>
    </testsuite>
</testsuites>
