<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites name="superWild_4" time="444" tests="1" failures="0" errors="0">
    <testsuite name="superWild_4" tests="1" failures="0" errors="0" time="444" timestamp="2019-08-23 23:07:50" hostname="eiralee - 172.20.10.2" id="Test Suites/INT/superWild_4">
        <properties>
            <property name="deviceName" value=""/>
            <property name="devicePlatform" value=""/>
            <property name="logFolder" value="/Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738"/>
            <property name="logFiles" value="/Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/execution0.log, /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/execution1.log"/>
            <property name="attachments" value=""/>
            <property name="hostName" value="eiralee - 172.20.10.2"/>
            <property name="hostAddress" value="172.20.10.2"/>
            <property name="os" value="Mac OS X 64bit"/>
            <property name="katalonVersion" value="6.3.1.2"/>
        </properties>
        <testcase name="Test Cases/INT_env/4_Multiplier_CALL" classname="Test Cases/INT_env/4_Multiplier_CALL" status="PASSED">
            <system-out>2019-08-23 23:07:51 - [TEST_CASE][PASSED] - Test Cases/INT_env/4_Multiplier_CALL: Test Cases/INT_env/4_Multiplier_CALL

2019-08-23 23:07:52 - [TEST_STEP][PASSED] - Multiplier = new java.util.ArrayList(): null

2019-08-23 23:07:52 - [TEST_STEP][PASSED] - Multiplier.add("wild_multiplier"): null

2019-08-23 23:07:52 - [TEST_STEP][PASSED] - Multiplier.add("wild_config"): null

2019-08-23 23:07:52 - [TEST_STEP][PASSED] - wild_config = new java.util.ArrayList(): null

2019-08-23 23:07:52 - [TEST_STEP][PASSED] - wild_config.add("index"): null

2019-08-23 23:07:52 - [TEST_STEP][PASSED] - wild_config.add("value"): null

2019-08-23 23:07:52 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/Wallet/Get_Session_Token", ["url_krug_gw":url_krug_gw, "partner":Partner, "secret_key":secret_key, "userid":Userid])): Send request and verify the response successfully

2019-08-23 23:07:54 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/0.har

2019-08-23 23:07:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:07:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:07:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:07:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:07:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:07:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:07:55 - [TEST_STEP][PASSED] - getResponseText()).contains("session_token"): null

2019-08-23 23:07:55 - [TEST_STEP][PASSED] - getsession = new groovy.json.JsonSlurper(): null

2019-08-23 23:07:55 - [TEST_STEP][PASSED] - result_getsession = getsession.parseText(response.getResponseBodyContent()): null

2019-08-23 23:07:55 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-23 23:07:55 - [TEST_STEP][PASSED] - println("...value extracted is :" + session_token): null

2019-08-23 23:07:55 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-23 23:07:56 - [TEST_STEP][PASSED] - println("GlobalVariable is :" + session_token): null

2019-08-23 23:07:56 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-23 23:07:56 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-23 23:07:56 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:07:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:07:56 - [TEST_STEP][PASSED] - M4_login = sendRequestAndVerify(findTestObject("INT/RGS(M4)/M4_Login", ["partner":Partner, "game_code":Game_code, "session_token":session_token])): Send request and verify the response successfully

2019-08-23 23:07:57 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/1.har

2019-08-23 23:07:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:07:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:07:57 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:07:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:07:57 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:07:57 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:07:57 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:07:57 - [TEST_STEP][PASSED] - M4_login = new groovy.json.JsonSlurper(): null

2019-08-23 23:07:57 - [TEST_STEP][PASSED] - result_M4_login = M4_login.parseText(response.getResponseBodyContent()): null

2019-08-23 23:07:57 - [TEST_STEP][PASSED] - M4_login_user_id = user_id: null

2019-08-23 23:07:57 - [TEST_STEP][PASSED] - println("playerid is: " + M4_login_user_id): null

2019-08-23 23:07:57 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-23 23:07:57 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:07:57 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:07:57 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-23 23:07:57 - [TEST_STEP][PASSED] - M4_init = sendRequestAndVerify(findTestObject("INT/RGS(M4)/M4_init", ["partner":Partner, "M4_recorder":M4_recorder, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-23 23:07:58 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/2.har

2019-08-23 23:07:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:07:58 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - M4_init = new groovy.json.JsonSlurper(): null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - result_M4_init = M4_init.parseText(response.getResponseBodyContent()): null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - rgs_session_token = session_token: null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - M4_init_balance = balance: null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - M4_init_balance = M4_init_balance: null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - game_code = genesis_id: null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - game_code = game_code: null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - M4_free_round = free_round: null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - M4_free_round = M4_free_round: null

2019-08-23 23:07:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:07:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt;= 500, (i++)]): null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:07:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:07:58 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/3.har

2019-08-23 23:07:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:07:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:07:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:07:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:07:59 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/4.har

2019-08-23 23:07:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:07:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:07:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:08:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:08:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:08:00 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/5.har

2019-08-23 23:08:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:08:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:08:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:08:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:08:01 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/6.har

2019-08-23 23:08:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:08:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:08:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:08:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:08:01 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/7.har

2019-08-23 23:08:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:08:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:08:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:08:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:08:02 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/8.har

2019-08-23 23:08:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:08:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:08:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:08:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:08:02 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/9.har

2019-08-23 23:08:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:08:03 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:08:11 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:08:11 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:11 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:08:12 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/10.har

2019-08-23 23:08:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:08:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:08:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:08:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:08:13 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/11.har

2019-08-23 23:08:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:08:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:08:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:08:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:08:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:08:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:08:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:08:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:08:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:08:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:08:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:08:28 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:08:28 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:08:28 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:08:28 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:08:28 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:08:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:28 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:08:29 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/12.har

2019-08-23 23:08:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:08:29 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:08:29 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:08:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:29 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:08:30 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/13.har

2019-08-23 23:08:30 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:08:30 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:08:30 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:08:30 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:08:30 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/14.har

2019-08-23 23:08:30 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:08:30 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:08:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:08:34 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:08:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:08:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:08:36 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/15.har

2019-08-23 23:08:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:08:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:08:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:08:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:08:36 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/16.har

2019-08-23 23:08:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:08:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:08:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:08:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:08:48 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/17.har

2019-08-23 23:08:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:08:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:08:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:08:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:08:48 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/18.har

2019-08-23 23:08:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:08:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:08:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:08:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:08:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:08:49 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/19.har

2019-08-23 23:08:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:08:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:08:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:09:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:09:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:09:00 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/20.har

2019-08-23 23:09:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:09:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:09:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:09:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:09:01 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/21.har

2019-08-23 23:09:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:09:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:09:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:09:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:09:12 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/22.har

2019-08-23 23:09:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:09:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:09:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:09:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:09:14 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/23.har

2019-08-23 23:09:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:09:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:09:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:09:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:09:14 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/24.har

2019-08-23 23:09:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:09:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:09:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:09:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:09:24 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/25.har

2019-08-23 23:09:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:09:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:09:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:09:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:09:25 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/26.har

2019-08-23 23:09:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:09:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:29 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:09:29 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:09:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:09:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:09:48 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/27.har

2019-08-23 23:09:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:09:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:09:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:09:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:09:48 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/28.har

2019-08-23 23:09:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:09:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:09:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:09:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:09:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:09:49 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/29.har

2019-08-23 23:09:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:09:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:09:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:09:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:09:50 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/30.har

2019-08-23 23:09:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:09:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:09:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:09:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:09:50 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/31.har

2019-08-23 23:09:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:09:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:10:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:10:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:10:00 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/32.har

2019-08-23 23:10:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:10:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:10:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:10:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:10:01 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/33.har

2019-08-23 23:10:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:10:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:10:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:10:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:10:24 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/34.har

2019-08-23 23:10:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:10:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:10:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:10:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:10:24 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/35.har

2019-08-23 23:10:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:10:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:10:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:10:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:10:25 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/36.har

2019-08-23 23:10:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:10:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:10:25 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:10:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:25 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:10:25 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/37.har

2019-08-23 23:10:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:10:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:10:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:10:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:10:26 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/38.har

2019-08-23 23:10:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:10:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:10:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:10:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:10:36 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/39.har

2019-08-23 23:10:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:10:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:10:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:10:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:10:37 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/40.har

2019-08-23 23:10:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:10:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:10:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:10:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:10:59 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/41.har

2019-08-23 23:10:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:10:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:11:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:11:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:11:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:11:00 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/42.har

2019-08-23 23:11:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:11:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:11:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:11:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:11:00 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/43.har

2019-08-23 23:11:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:11:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:11:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:11:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:11:01 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/44.har

2019-08-23 23:11:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:11:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:11:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:11:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:11:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:11:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:11:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:11:11 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:11:11 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:11:11 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:11:11 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:11:11 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:11:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:11 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:11:12 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/45.har

2019-08-23 23:11:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:11:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:11:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:11:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:11:13 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/46.har

2019-08-23 23:11:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:11:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:11:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:11:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:11:13 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/47.har

2019-08-23 23:11:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:11:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:11:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:11:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:11:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:11:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:11:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:11:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:11:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:11:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:11:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:11:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:11:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:11:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:11:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:11:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:11:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:11:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:11:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:11:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:11:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:11:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:11:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:11:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:11:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:11:36 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/48.har

2019-08-23 23:11:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:11:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:11:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:11:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:11:37 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/49.har

2019-08-23 23:11:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:11:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:11:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:11:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:11:37 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/50.har

2019-08-23 23:11:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:11:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:11:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:11:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:11:38 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/51.har

2019-08-23 23:11:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:11:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:11:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:11:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:11:48 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/52.har

2019-08-23 23:11:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:11:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:11:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:11:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:11:48 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/53.har

2019-08-23 23:11:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:11:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:11:48 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:11:53 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:11:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:11:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:11:53 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:11:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:11:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:11:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:11:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:11:53 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/54.har

2019-08-23 23:11:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:12:11 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:12:11 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:12:11 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:11 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:12:11 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/55.har

2019-08-23 23:12:11 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:12:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:12:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:12:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:12:13 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/56.har

2019-08-23 23:12:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:12:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:12:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:12:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:12:13 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/57.har

2019-08-23 23:12:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:12:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:12:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:12:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:12:14 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/58.har

2019-08-23 23:12:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:12:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:12:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:12:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:12:24 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/59.har

2019-08-23 23:12:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:12:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:12:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:12:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:12:24 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/60.har

2019-08-23 23:12:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:12:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:29 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:12:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:12:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:12:47 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/61.har

2019-08-23 23:12:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:12:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:12:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:12:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:12:48 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/62.har

2019-08-23 23:12:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:12:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:12:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:12:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:12:48 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/63.har

2019-08-23 23:12:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:12:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:12:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:12:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:12:49 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/64.har

2019-08-23 23:12:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:12:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:12:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:12:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:12:49 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/65.har

2019-08-23 23:12:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:12:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:12:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:12:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:13:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:13:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:13:00 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/66.har

2019-08-23 23:13:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:13:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:13:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:13:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:13:01 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/67.har

2019-08-23 23:13:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:13:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:13:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:13:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:13:25 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/68.har

2019-08-23 23:13:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:13:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:13:25 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:13:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:13:25 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/69.har

2019-08-23 23:13:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:13:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:13:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:13:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:13:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:13:26 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/70.har

2019-08-23 23:13:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:13:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:13:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:13:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:13:27 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/71.har

2019-08-23 23:13:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:13:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:13:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:13:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:13:27 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/72.har

2019-08-23 23:13:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:13:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:13:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:13:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:13:37 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/73.har

2019-08-23 23:13:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:13:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:13:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:13:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:13:37 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/74.har

2019-08-23 23:13:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:13:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:13:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:13:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:13:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:13:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:13:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:14:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:14:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:14:00 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/75.har

2019-08-23 23:14:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:14:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:14:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:14:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:14:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:14:01 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/76.har

2019-08-23 23:14:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:14:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:14:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:14:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:14:01 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/77.har

2019-08-23 23:14:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:14:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:14:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:14:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:14:02 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/78.har

2019-08-23 23:14:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:14:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:14:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:14:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:14:03 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/79.har

2019-08-23 23:14:03 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:14:03 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:14:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:14:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:14:13 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/80.har

2019-08-23 23:14:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:14:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:14:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:14:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:14:14 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/81.har

2019-08-23 23:14:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:14:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:14:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:14:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:14:38 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/82.har

2019-08-23 23:14:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:14:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:14:38 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:14:38 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:14:38 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/83.har

2019-08-23 23:14:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:14:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:14:39 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:14:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:14:39 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/84.har

2019-08-23 23:14:39 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:14:39 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:14:39 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:14:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:39 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:14:39 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/85.har

2019-08-23 23:14:39 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:14:40 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:14:40 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:14:40 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:14:40 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/86.har

2019-08-23 23:14:40 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:14:40 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:14:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:14:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:14:50 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/87.har

2019-08-23 23:14:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:14:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:14:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:14:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:14:50 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/88.har

2019-08-23 23:14:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:14:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:55 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:14:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:14:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:14:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:14:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:14:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:15:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:15:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:15:14 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/89.har

2019-08-23 23:15:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:15:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:15:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:15:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:15:15 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/90.har

2019-08-23 23:15:15 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:15:15 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:15:15 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:15:15 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:15 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:15:16 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/91.har

2019-08-23 23:15:16 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:15:16 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:15:16 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:15:16 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:16 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:15:16 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/92.har

2019-08-23 23:15:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:15:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:15:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:15:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:15:17 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/93.har

2019-08-23 23:15:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:15:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:15:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:15:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:15:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:15:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:15:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:15:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:15:26 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/94.har

2019-08-23 23:15:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:15:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:15:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:15:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:15:27 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/95.har

2019-08-23 23:15:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:15:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:15:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:15:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:15:50 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/96.har

2019-08-23 23:15:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:15:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:15:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:15:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:50 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:15:51 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/97.har

2019-08-23 23:15:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:15:51 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:15:51 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:15:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:15:51 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/98.har

2019-08-23 23:15:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:15:51 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:15:51 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:15:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:51 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:15:52 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/99.har

2019-08-23 23:15:52 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:15:52 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:15:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:15:55 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:15:55 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:16:03 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:16:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:16:03 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/100.har

2019-08-23 23:16:03 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:16:03 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:16:03 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:16:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:03 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:16:04 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/101.har

2019-08-23 23:16:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:16:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:16:04 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:16:04 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:04 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:16:04 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/102.har

2019-08-23 23:16:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:16:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:16:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:16:05 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:16:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:16:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:16:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:16:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:16:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:16:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:16:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:16:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:16:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:16:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:16:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:16:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:16:27 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/103.har

2019-08-23 23:16:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:16:28 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:16:28 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:16:28 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:16:28 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/104.har

2019-08-23 23:16:28 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:16:28 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:16:28 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:16:28 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:28 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:16:29 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/105.har

2019-08-23 23:16:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:16:29 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:16:29 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:16:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:16:29 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/106.har

2019-08-23 23:16:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:16:29 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:16:39 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:16:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:39 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:16:40 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/107.har

2019-08-23 23:16:40 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:16:40 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:16:40 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:16:40 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:40 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:16:41 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/108.har

2019-08-23 23:16:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:16:41 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:16:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:16:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:16:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:16:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:16:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:17:03 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:17:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:03 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:17:04 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/109.har

2019-08-23 23:17:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:17:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:17:04 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:17:04 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:17:04 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/110.har

2019-08-23 23:17:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:17:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:17:05 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:17:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:17:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:17:05 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/111.har

2019-08-23 23:17:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:17:05 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:17:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:17:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:17:06 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/112.har

2019-08-23 23:17:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:17:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:17:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:17:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:17:06 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/113.har

2019-08-23 23:17:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:17:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:17:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:17:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:17:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:17:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:17:16 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:17:16 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:16 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:17:17 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/114.har

2019-08-23 23:17:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:17:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:17:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:17:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:17:17 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/115.har

2019-08-23 23:17:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:17:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:17:40 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:17:40 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:40 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:17:41 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/116.har

2019-08-23 23:17:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:17:41 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:17:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:17:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:17:42 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/117.har

2019-08-23 23:17:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:17:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:17:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:17:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:17:42 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/118.har

2019-08-23 23:17:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:17:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:17:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:17:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:17:43 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/119.har

2019-08-23 23:17:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:17:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:17:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:17:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:17:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:17:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:18:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:18:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:18:05 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/120.har

2019-08-23 23:18:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:18:05 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:18:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:18:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:18:05 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/121.har

2019-08-23 23:18:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:18:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:18:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:18:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:18:06 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/122.har

2019-08-23 23:18:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:18:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:18:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:18:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:18:07 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/123.har

2019-08-23 23:18:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:18:07 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:18:07 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:18:07 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:18:07 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/124.har

2019-08-23 23:18:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:18:07 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:18:07 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:18:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:18:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:18:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:18:18 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/125.har

2019-08-23 23:18:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:18:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:18:18 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:18:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:18 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:18:18 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/126.har

2019-08-23 23:18:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:18:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:18:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:18:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:18:43 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/127.har

2019-08-23 23:18:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:18:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:18:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:18:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:18:44 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/128.har

2019-08-23 23:18:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:18:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:18:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:18:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:18:44 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/129.har

2019-08-23 23:18:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:18:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:18:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:18:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:18:45 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/130.har

2019-08-23 23:18:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:18:45 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:18:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:18:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:18:55 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/131.har

2019-08-23 23:18:55 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:18:55 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:18:55 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:18:55 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:55 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:18:56 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/132.har

2019-08-23 23:18:56 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:18:56 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:18:56 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:18:56 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:18:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:18:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:18:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:18:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:18:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:18:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:19:00 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/133.har

2019-08-23 23:19:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:19:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:19:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:19:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:19:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:19:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:19:18 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:19:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:18 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:19:19 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/134.har

2019-08-23 23:19:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:19:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:19:19 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:19:19 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:19 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:19:19 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/135.har

2019-08-23 23:19:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:19:20 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:19:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:19:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:19:20 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/136.har

2019-08-23 23:19:20 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:19:20 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:19:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:19:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:20 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:19:21 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/137.har

2019-08-23 23:19:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:19:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:19:31 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:19:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:19:32 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/138.har

2019-08-23 23:19:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:19:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:19:32 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:19:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:19:32 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/139.har

2019-08-23 23:19:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:19:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:19:55 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:19:55 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:55 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:19:58 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/140.har

2019-08-23 23:19:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:19:58 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:19:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:19:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:19:59 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/141.har

2019-08-23 23:19:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:19:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:19:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:19:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:19:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:20:00 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/142.har

2019-08-23 23:20:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:20:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:20:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:20:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:20:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-23 23:20:02 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/143.har

2019-08-23 23:20:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:20:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-23 23:20:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:20:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Double") || M4_spin_reels_symbols[4].contains("WILD_Triple")): null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - break: null

2019-08-23 23:20:02 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_Round_detail", ["partner":Partner, "M4_spin_round_id":M4_spin_round_id])): Send request and verify the response successfully

2019-08-23 23:20:09 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/144.har

2019-08-23 23:20:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:20:09 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round = new groovy.json.JsonSlurper(): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_detail = M4_round.parseText(response.getResponseBodyContent()): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_object = M4_round_detail: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_object = M4_round_object: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_transaction_type = transaction_type: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_transaction_type = M4_round_transaction_type: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_player_id = player_id: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_player_id = M4_round_player_id: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_booster_type = booster_type: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_booster_type = M4_round_booster_type: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_currency = currency: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_currency = M4_round_currency: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_id = round_id: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_id = M4_round_id: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_transaction_id = transaction_id: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_transaction_id = M4_round_transaction_id: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_transaction_time = transaction_time: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_transaction_time = M4_round_transaction_time: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_total_win = total_win: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_total_win = M4_round_total_win: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_balance_long = balance: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_balance = Long.toString(M4_round_balance_long): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_balance = M4_round_balance: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_total_bet = total_bet: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_total_bet = M4_round_total_bet: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_bet_value = bet_value: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_bet_value = M4_round_bet_value: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_line = line: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_line = M4_round_line: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels1 = reels[0]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels1 = M4_round_reels1: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels2 = reels[1]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels2 = M4_round_reels2: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels3 = reels[2]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels3 = M4_round_reels3: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels4 = reels[3]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels4 = M4_round_reels4: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels5 = reels[4]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels5 = M4_round_reels5: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_F_reels1 = reels[0]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_F_reels1 = M4_round_F_reels1: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_F_reels2 = reels[1]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_F_reels2 = M4_round_F_reels2: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_F_reels3 = reels[2]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_F_reels3 = M4_round_F_reels3: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_F_reels4 = reels[3]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_F_reels4 = M4_round_F_reels4: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_F_reels5 = reels[4]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_F_reels5 = M4_round_F_reels5: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = symbols[0]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = M4_round_reels0_symbols1: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = symbols[1]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = M4_round_reels0_symbols2: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = symbols[2]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = M4_round_reels0_symbols3: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = symbols[0]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = M4_round_reels1_symbols1: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = symbols[1]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = M4_round_reels1_symbols2: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = symbols[2]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = M4_round_reels1_symbols3: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels1_symbols4 = symbols[3]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = symbol: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = M4_round_reels_symbols_all: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_features_triggered = features_triggered: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_features_complete = complete: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_features_complete = M4_round_features_complete: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_free_spins_left = free_spins_left: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_free_spins_left = M4_round_free_spins_left: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = total_free_spin_count: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = M4_round_total_free_spin_count: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = total_free_spin_win_amount: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = M4_round_total_free_spin_win_amount: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_subfeatures = subfeatures: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_subfeatures = M4_round_subfeatures: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = wild_multiplier: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = M4_round_wild_multiplier: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_wild_config = wild_config: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_wild_config = M4_round_wild_config: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_wild_config_index = index: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_free_spin_left = free_spins_lef: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_free_spin_left = M4_round_free_spin_left: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_original_reels = original_reels: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_original_reels = M4_round_original_reels: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_swapped_reels = swapped_reels: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_swapped_reels = M4_round_swapped_reels: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_free_spins_added = free_spins_added: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_spin_result_list = spin_results[0]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_feature_state = feature_state: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_feature_state = M4_round_feature_state: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_feature_state_all = feature_state: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_feature_state_all = M4_round_feature_state_all: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_features_type = type: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_features_type = M4_round_features_type: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_scatter_win = scatter_win: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_scatter_win = M4_round_scatter_win: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_spin_result1 = spin_results[1]: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_spin_result1 = M4_round_spin_result1: null

2019-08-23 23:20:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:20:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - wildMultiplierIndex = -1: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - wildMultiplierFeatureStateKeys = null: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - wildMultiplierWildConfigeKeys = "": null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_round_features_triggered.size(), (i++)]): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - if (type.equals("WILD_MULTIPLIER")): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - if (type.equals("WILD_MULTIPLIER")): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - wildMultiplierIndex = i: null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - wildMultiplierFeatureStateKeys = feature_state.keySet(): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - wildMultiplierWildConfigeKeys = wild_config[0][0].keySet(): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - if (type.equals("WILD_MULTIPLIER")): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - println(wildMultiplierIndex): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - println(wildMultiplierFeatureStateKeys): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - println(wildMultiplierWildConfigeKeys): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - multi_keys = new java.util.ArrayList(wildMultiplierFeatureStateKeys): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - wildConfig_keys = new java.util.ArrayList(wildMultiplierWildConfigeKeys): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - Collections.sort(multi_keys): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - Collections.sort(Multiplier): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - Collections.sort(wildConfig_keys): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - Collections.sort(wild_config): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - println("multi_keys is:" + multi_keys): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - println("Multiplier is:" + Multiplier): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - println("wildConfig_keys is: " + wildConfig_keys): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - println("wild_config is:" + wild_config): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - assert multi_keys.equals(Multiplier): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - assert wildConfig_keys.equals(wild_config): null

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - callTestCase(findTestCase("INT_env/compare_values/4_Multiplier_verify_value_and_summary"), ["Partner":Partner, "Userid":Userid, "Game_code":Game_code, "url_krug_gw":url_krug_gw, "secret_key":secret_key, "M4_recorder":M4_recorder]): Call Test Case 'Test Cases/INT_env/compare_values/4_Multiplier_verify_value_and_summary' successfully

2019-08-23 23:20:09 - [TEST_CASE][PASSED] - Test Cases/INT_env/compare_values/4_Multiplier_verify_value_and_summary: Test Cases/INT_env/compare_values/4_Multiplier_verify_value_and_summary

2019-08-23 23:20:09 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/Wallet/Get_Session_Token", ["url_krug_gw":url_krug_gw, "partner":Partner, "secret_key":secret_key, "userid":Userid])): Send request and verify the response successfully

2019-08-23 23:20:10 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/145.har

2019-08-23 23:20:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:20:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:20:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:20:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:20:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:20:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:20:10 - [TEST_STEP][PASSED] - getResponseText()).contains("session_token"): null

2019-08-23 23:20:10 - [TEST_STEP][PASSED] - getsession = new groovy.json.JsonSlurper(): null

2019-08-23 23:20:10 - [TEST_STEP][PASSED] - result_getsession = getsession.parseText(response.getResponseBodyContent()): null

2019-08-23 23:20:10 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-23 23:20:10 - [TEST_STEP][PASSED] - println("...value extracted is :" + session_token): null

2019-08-23 23:20:10 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-23 23:20:10 - [TEST_STEP][PASSED] - println("GlobalVariable is :" + session_token): null

2019-08-23 23:20:10 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-23 23:20:10 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-23 23:20:10 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:20:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:20:10 - [TEST_STEP][PASSED] - M4_login = sendRequestAndVerify(findTestObject("INT/RGS(M4)/M4_Login", ["partner":Partner, "game_code":Game_code, "session_token":session_token])): Send request and verify the response successfully

2019-08-23 23:20:10 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/146.har

2019-08-23 23:20:11 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:20:11 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - M4_login = new groovy.json.JsonSlurper(): null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - result_M4_login = M4_login.parseText(response.getResponseBodyContent()): null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - M4_login_user_id = user_id: null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - println("playerid is: " + M4_login_user_id): null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-23 23:20:11 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:20:11 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - M4_init = sendRequestAndVerify(findTestObject("INT/RGS(M4)/M4_init", ["partner":Partner, "M4_recorder":M4_recorder, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-23 23:20:11 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/147.har

2019-08-23 23:20:11 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:20:11 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - M4_init = new groovy.json.JsonSlurper(): null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - result_M4_init = M4_init.parseText(response.getResponseBodyContent()): null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - rgs_session_token = session_token: null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - M4_init_balance = balance: null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - M4_init_balance = M4_init_balance: null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - game_code = genesis_id: null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - game_code = game_code: null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - M4_free_round = free_round: null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - M4_free_round = M4_free_round: null

2019-08-23 23:20:11 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:20:11 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-23 23:20:11 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_Round_detail", ["partner":Partner, "M4_spin_round_id":M4_spin_round_id])): Send request and verify the response successfully

2019-08-23 23:20:11 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/148.har

2019-08-23 23:20:11 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:20:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round = new groovy.json.JsonSlurper(): null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_detail = M4_round.parseText(response.getResponseBodyContent()): null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_object = M4_round_detail: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_object = M4_round_object: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_transaction_type = transaction_type: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_transaction_type = M4_round_transaction_type: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_player_id = player_id: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_player_id = M4_round_player_id: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_booster_type = booster_type: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_booster_type = M4_round_booster_type: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_currency = currency: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_currency = M4_round_currency: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_id = round_id: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_id = M4_round_id: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_transaction_id = transaction_id: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_transaction_id = M4_round_transaction_id: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_transaction_time = transaction_time: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_transaction_time = M4_round_transaction_time: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_total_win = total_win: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_total_win = M4_round_total_win: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_balance_long = balance: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_balance = Long.toString(M4_round_balance_long): null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_balance = M4_round_balance: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_total_bet = total_bet: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_total_bet = M4_round_total_bet: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_bet_value = bet_value: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_bet_value = M4_round_bet_value: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_line = line: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_line = M4_round_line: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels1 = reels[0]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels1 = M4_round_reels1: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels2 = reels[1]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels2 = M4_round_reels2: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels3 = reels[2]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels3 = M4_round_reels3: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels4 = reels[3]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels4 = M4_round_reels4: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels5 = reels[4]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels5 = M4_round_reels5: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_F_reels1 = reels[0]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_F_reels1 = M4_round_F_reels1: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_F_reels2 = reels[1]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_F_reels2 = M4_round_F_reels2: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_F_reels3 = reels[2]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_F_reels3 = M4_round_F_reels3: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_F_reels4 = reels[3]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_F_reels4 = M4_round_F_reels4: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_F_reels5 = reels[4]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_F_reels5 = M4_round_F_reels5: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = symbols[0]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = M4_round_reels0_symbols1: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = symbols[1]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = M4_round_reels0_symbols2: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = symbols[2]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = M4_round_reels0_symbols3: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = symbols[0]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = M4_round_reels1_symbols1: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = symbols[1]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = M4_round_reels1_symbols2: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = symbols[2]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = M4_round_reels1_symbols3: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels1_symbols4 = symbols[3]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = symbol: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = M4_round_reels_symbols_all: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_features_triggered = features_triggered: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_features_complete = complete: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_features_complete = M4_round_features_complete: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_free_spins_left = free_spins_left: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_free_spins_left = M4_round_free_spins_left: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = total_free_spin_count: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = M4_round_total_free_spin_count: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = total_free_spin_win_amount: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = M4_round_total_free_spin_win_amount: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_subfeatures = subfeatures: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_subfeatures = M4_round_subfeatures: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = wild_multiplier: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = M4_round_wild_multiplier: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_wild_config = wild_config: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_wild_config = M4_round_wild_config: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_wild_config_index = index: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_free_spin_left = free_spins_lef: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_free_spin_left = M4_round_free_spin_left: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_original_reels = original_reels: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_original_reels = M4_round_original_reels: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_swapped_reels = swapped_reels: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_swapped_reels = M4_round_swapped_reels: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_free_spins_added = free_spins_added: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_spin_result_list = spin_results[0]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_feature_state = feature_state: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_feature_state = M4_round_feature_state: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_feature_state_all = feature_state: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_feature_state_all = M4_round_feature_state_all: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_features_type = type: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_features_type = M4_round_features_type: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_scatter_win = scatter_win: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_scatter_win = M4_round_scatter_win: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_spin_result1 = spin_results[1]: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_round_spin_result1 = M4_round_spin_result1: null

2019-08-23 23:20:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:20:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/RGS(M4)/in_game_history_detail", ["partner":Partner, "M4_spin_transaction_id":M4_spin_transaction_id, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-23 23:20:12 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/149.har

2019-08-23 23:20:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:20:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_game_history = new groovy.json.JsonSlurper(): null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_history = M4_game_history.parseText(response.getResponseBodyContent()): null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_history_currency = currency: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_history_currency = M4_history_currency: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_history_spin_transaction = spin_transaction: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_history_spin_transaction = M4_history_spin_transaction: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_history_date = date: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_history_date = M4_history_date: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_history_game_id = game_id: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_history_tx_id = tx_id: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_history_causality = causality: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_history_causality = M4_history_causality: null

2019-08-23 23:20:12 - [TEST_STEP][PASSED] - M4_history_round_id = round_id: null

2019-08-23 23:20:14 - [TEST_STEP][PASSED] - M4_history_round_id = M4_history_round_id: null

2019-08-23 23:20:14 - [TEST_STEP][PASSED] - M4_history_game_total_won = total_won: null

2019-08-23 23:20:14 - [TEST_STEP][PASSED] - M4_history_game_total_won = M4_history_game_total_won: null

2019-08-23 23:20:14 - [TEST_STEP][PASSED] - M4_history_game_total_bet = total_bet: null

2019-08-23 23:20:14 - [TEST_STEP][PASSED] - M4_history_total_bet = M4_history_game_total_bet: null

2019-08-23 23:20:14 - [TEST_STEP][PASSED] - M4_history_lines = lines: null

2019-08-23 23:20:14 - [TEST_STEP][PASSED] - M4_history_total_won = total_won: null

2019-08-23 23:20:14 - [TEST_STEP][PASSED] - M4_history_total_won = M4_history_total_won: null

2019-08-23 23:20:14 - [TEST_STEP][PASSED] - M4_history_bonus_name = bonus_name: null

2019-08-23 23:20:14 - [TEST_STEP][PASSED] - M4_history_bonus_retrigger = bonus_retrigger: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_key = key: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_data = data: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_total_bet = total_bet: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_total_bet = M4_history_total_bet: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_balance = balance: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_balance = M4_history_balance: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_type = type: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_type = M4_history_type: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_reel_symbol = symbols: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_reel_symbol = M4_history_reel_symbol: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_reels = reels: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_reels = M4_history_reels: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_F_reels1 = reels: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_F_reels = M4_history_F_reels1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_multiplier = multiplier: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_multiplier = M4_history_multiplier: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_bonuses1 = bonuses[1]: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_history_bonuses1 = M4_history_bonuses1: null

2019-08-23 23:20:33 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:20:33 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_round_reels3 = M4_round_reels3: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_round_reels5 = M4_round_reels5: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - wildMultiplierIndex = -1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - extraFreeSpinTypeAndComplete = false: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_round_features_triggered.size(), (i++)]): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - if (type.equals("WILD_MULTIPLIER") &amp;&amp; complete == true): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - if (type.equals("WILD_MULTIPLIER") &amp;&amp; complete == true): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - extraFreeSpinTypeAndComplete = true: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - wildMultiplierIndex = i: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - wild_multiplier = wild_multiplier: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - if (type.equals("WILD_MULTIPLIER") &amp;&amp; complete == true): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - multi = 1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - multi1 = 1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_round_features_triggered.size(), (i++)]): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - if (type.equals("WILD_MULTIPLIER") &amp;&amp; complete == true): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - if (type.equals("WILD_MULTIPLIER") &amp;&amp; complete == true): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - feature_state = feature_state: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - wildConfig2 = wild_config[2]: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - wildConfig4 = wild_config[4]: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - configValue2 = wildConfig2[0].get("value"): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - configValue4 = wildConfig4[0].get("value"): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - if (configValue2 != null &amp;&amp; configValue2 != 0): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - multi = multi * configValue2: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - if (configValue4 != null &amp;&amp; configValue4 != 0): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - multi1 = multi1 * configValue4: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - if (type.equals("WILD_MULTIPLIER") &amp;&amp; complete == true): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - config_value = multi * multi1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_round_wild_config = M4_round_wild_config: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - wildConfig = value: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_round_object = M4_round_object: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - symbolsReels3 = symbols: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - Reels3list = new java.util.ArrayList(): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; symbolsReels3.size(), (i++)]): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - Reels3list.add(symbol): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - Reels3list.add(symbol): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - Reels3list.add(symbol): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - symbolsReels5 = symbols: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - Reels5list = new java.util.ArrayList(): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; symbolsReels5.size(), (i++)]): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - Reels5list.add(symbol): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - Reels5list.add(symbol): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - Reels5list.add(symbol): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - symbol_value = "": null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - if (Reels3list.contains("WILD_Double") &amp;&amp; Reels3list.contains("WILD_Triple")): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - else if (Reels5list.contains("WILD_Double") &amp;&amp; Reels5list.contains("WILD_Triple")): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - else if (Reels3list.contains("WILD_Double") &amp;&amp; Reels5list.contains("WILD_Double")): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - else if (Reels3list.contains("WILD_Triple") &amp;&amp; Reels5list.contains("WILD_Double")): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - else if (Reels3list.contains("WILD_Double") &amp;&amp; Reels5list.contains("WILD_Triple")): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - symbol_value = 6: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - subfeatures = new java.util.ArrayList(): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - subfeatures.add("FREE_SPIN"): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - feature_trigger = features_triggered: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - total_free_spin_count = "": null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - free_spins_left = "": null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - total_free_spin_win_amount = "": null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; feature_trigger.size(), (i++)]): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - feature_type = type: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - if (feature_type == "FREE_SPIN"): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - feature_type = type: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - if (feature_type == "FREE_SPIN"): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - feature_type = type: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - if (feature_type == "FREE_SPIN"): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - subfeatures_list = subfeatures: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; subfeatures_list.size(), (j++)]): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - subfeatures.add(subfeatures_list[j]): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - subfeatures.add(subfeatures_list[j]): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/RGS(M4)/Summary_history", ["game_code":"SW_M4_V1_RECORDER", "partner":Partner, "userid":Userid])): Send request and verify the response successfully

2019-08-23 23:20:33 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190823_230738/INT/superWild_4/20190823_230738/requests/main/150.har

2019-08-23 23:20:33 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-23 23:20:33 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_detail = new groovy.json.JsonSlurper(): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_history = summary_detail.parseText(response.getResponseBodyContent()): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_top_level = summary_history: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_top_level = summary_top_level: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_data = data: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_data = summary_data: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_query = query: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_query = summary_query: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_payload = payload: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_payload = summary_payload: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_round_id_1 = round_id: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_round_id_1 = summary_round_id_1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_total_bet_1 = total_bet: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_total_bet_1 = summary_total_bet_1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_bet_value_1 = bet_value: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_bet_value_1 = summary_bet_value_1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_total_win_1 = total_win: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_total_win_1 = summary_total_win_1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_balance_1 = balance: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_balance_1 = summary_balance_1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_date_1 = date: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_date_1 = summary_date_1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_round_type_1 = round_type: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_round_type_1 = summary_round_type_1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_bonus_provider_1 = bonus_provider: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_bonus_provider_1 = summary_bonus_provider_1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_booster_type_1 = booster_type: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_booster_type_1 = summary_booster_type_1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_with_free_spin_1 = with_free_spin: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_with_free_spin_1 = summary_with_free_spin_1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_feature_track_1 = feature_track: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_feature_track_1 = summary_feature_track_1: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_totalCount = totalCount: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - summary_totalCount = summary_totalCount: null

2019-08-23 23:20:33 - [MESSAGE][PASSED] - Verify response successfully

2019-08-23 23:20:33 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - Collections.sort(subfeatures): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - Collections.sort(summary_feature_track_1): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - println("GlobalVariable.summary_feature_track_1 is: " + summary_feature_track_1): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - println("subfeatures is: " + subfeatures): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_history_multiplier is: " + M4_history_multiplier): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - println("GlobalVariable.summary_with_free_spin_1 is: " + summary_with_free_spin_1): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - println("symbol_value is: " + symbol_value): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - println("Config_Value is:" + config_value): null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - assert M4_history_multiplier == symbol_value: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - assert config_value == M4_history_multiplier: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - assert summary_with_free_spin_1 == true: null

2019-08-23 23:20:33 - [TEST_STEP][PASSED] - assert subfeatures.equals(summary_feature_track_1): null

2019-08-23 23:20:33 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/INT_env/compare_values/4_Multiplier_verify_value_and_summary' successfully</system-out>
            <system-err></system-err>
        </testcase>
        <system-out>2019-08-23 23:07:50 - [TEST_SUITE][PASSED] - superWild_4: Test Cases/INT_env/4_Multiplier_CALL</system-out>
        <system-err></system-err>
    </testsuite>
</testsuites>
