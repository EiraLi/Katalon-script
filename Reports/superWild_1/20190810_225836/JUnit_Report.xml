<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites name="superWild_1" time="391" tests="1" failures="0" errors="0">
    <testsuite name="superWild_1" tests="1" failures="0" errors="0" time="391" timestamp="2019-08-10 22:58:51" hostname="eiralee - 172.20.10.2" id="Test Suites/superWild_1">
        <properties>
            <property name="deviceName" value=""/>
            <property name="devicePlatform" value=""/>
            <property name="logFolder" value="/Users/eiralee/EiraLi-Katalon_API/INT_env/Reports/superWild_1/20190810_225836"/>
            <property name="logFiles" value="/Users/eiralee/EiraLi-Katalon_API/INT_env/Reports/superWild_1/20190810_225836/execution0.log, /Users/eiralee/EiraLi-Katalon_API/INT_env/Reports/superWild_1/20190810_225836/execution1.log, /Users/eiralee/EiraLi-Katalon_API/INT_env/Reports/superWild_1/20190810_225836/execution2.log"/>
            <property name="attachments" value=""/>
            <property name="hostName" value="eiralee - 172.20.10.2"/>
            <property name="hostAddress" value="172.20.10.2"/>
            <property name="os" value="Mac OS X 64bit"/>
            <property name="katalonVersion" value="6.2.0.1"/>
        </properties>
        <testcase name="Test Cases/M4-Game/Super_Wild/1_Free_Spin_CALL" classname="Test Cases/M4-Game/Super_Wild/1_Free_Spin_CALL" status="PASSED">
            <system-out>2019-08-10 22:58:51 - [TEST_CASE][PASSED] - Test Cases/M4-Game/Super_Wild/1_Free_Spin_CALL: Test Cases/M4-Game/Super_Wild/1_Free_Spin_CALL

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_top_level = new java.util.ArrayList(): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_top_level.add("booster_type"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_top_level.add("currency"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_top_level.add("player_id"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_top_level.add("round_id"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_top_level.add("spin_results"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_spin_result = new java.util.ArrayList(): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_spin_result.add("balance"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_spin_result.add("bet_value"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_spin_result.add("features_triggered"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_spin_result.add("line"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_spin_result.add("reel_wins"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_spin_result.add("reels"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_spin_result.add("scatter_win"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_spin_result.add("total_bet"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_spin_result.add("total_win"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_spin_result.add("transaction_id"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_spin_result.add("transaction_time"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_spin_result.add("transaction_type"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_feature_trigger = new java.util.ArrayList(): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_feature_trigger.add("complete"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_feature_trigger.add("feature_state"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_feature_trigger.add("subfeatures"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_feature_trigger.add("type"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_feature_state = new java.util.ArrayList(): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_feature_state.add("free_spins_left"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_feature_state.add("total_free_spin_count"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_feature_state.add("total_free_spin_win_amount"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_reel = new java.util.ArrayList(): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_reel.add("symbols"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_reel_symbol1 = new java.util.ArrayList(): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_reel_symbol1.add("symbol"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_reel_symbol2 = new java.util.ArrayList(): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_reel_symbol2.add("symbol"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_reel_symbol3 = new java.util.ArrayList(): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - NG_reel_symbol3.add("symbol"): null

2019-08-10 22:58:52 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("Wallet/Get_Session_Token", ["url_krug_gw":url_krug_gw, "partner":Partner, "secret_key":secret_key, "userid":Userid])): Send request and verify the response successfully

2019-08-10 22:58:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:58:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:58:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:58:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:58:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:58:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:58:53 - [TEST_STEP][PASSED] - getResponseText()).contains("session_token"): null

2019-08-10 22:58:53 - [TEST_STEP][PASSED] - getsession = new groovy.json.JsonSlurper(): null

2019-08-10 22:58:53 - [TEST_STEP][PASSED] - result_getsession = getsession.parseText(response.getResponseBodyContent()): null

2019-08-10 22:58:53 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-10 22:58:53 - [TEST_STEP][PASSED] - println("...value extracted is :" + session_token): null

2019-08-10 22:58:53 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-10 22:58:55 - [TEST_STEP][PASSED] - println("GlobalVariable is :" + session_token): null

2019-08-10 22:58:55 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-10 22:58:55 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-10 22:58:55 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:58:55 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:58:55 - [TEST_STEP][PASSED] - M4_login = sendRequestAndVerify(findTestObject("RGS(M4)/M4_Login", ["partner":Partner, "game_code":Game_code, "session_token":session_token])): Send request and verify the response successfully

2019-08-10 22:58:56 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:58:56 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - M4_login = new groovy.json.JsonSlurper(): null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - result_M4_login = M4_login.parseText(response.getResponseBodyContent()): null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - M4_login_user_id = user_id: null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - println("playerid is: " + M4_login_user_id): null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-10 22:58:56 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:58:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - M4_init = sendRequestAndVerify(findTestObject("RGS(M4)/M4_init", ["partner":Partner, "M4_recorder":M4_recorder, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-10 22:58:56 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:58:56 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - M4_init = new groovy.json.JsonSlurper(): null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - result_M4_init = M4_init.parseText(response.getResponseBodyContent()): null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - rgs_session_token = session_token: null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - M4_init_balance = balance: null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - M4_init_balance = M4_init_balance: null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - game_code = genesis_id: null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - game_code = game_code: null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - M4_free_round = free_round: null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - M4_free_round = M4_free_round: null

2019-08-10 22:58:56 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:58:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - for ([i = 0, i &lt;= 300, (i++)]): null

2019-08-10 22:58:56 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:58:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:58:57 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:58:57 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:58:57 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:58:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:58:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:58:58 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:58:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:58:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:58:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:58:58 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:58:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:58:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:58:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:58:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:58:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:58:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:58:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:58:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:58:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:06 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:16 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:16 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:16 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:23 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:23 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:25 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:25 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:25 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:41 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:45 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:45 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:52 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:52 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:52 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:52 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:52 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:52 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:52 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:56 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:56 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:57 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 22:59:57 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 22:59:57 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 22:59:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 22:59:57 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 22:59:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:04 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:04 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:04 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:04 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:04 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:05 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:11 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:11 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:12 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:18 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:18 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:18 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:20 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:25 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:25 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:25 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:28 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:28 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:28 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:29 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:29 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:29 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:30 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:30 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:32 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:32 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:33 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:33 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:33 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:33 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:33 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:33 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:40 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:40 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:40 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:40 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:41 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:45 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:45 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:45 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:45 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:57 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:57 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:57 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:58 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:00:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:00:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:00:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:00:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:00:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:00:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:07 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:10 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:11 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:11 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:11 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:11 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:11 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:11 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:11 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:11 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:15 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:15 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:15 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:15 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:15 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:15 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:18 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:18 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:19 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:19 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:23 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:23 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:27 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:29 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:29 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:29 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:30 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:30 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:30 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:30 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:30 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:31 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:31 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:32 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:32 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:40 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:40 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:40 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:41 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:45 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:45 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:45 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:01:58 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:01:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:01:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:01:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:01:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:01:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:03 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:03 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:03 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:03 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:03 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:07 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:07 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:07 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:07 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:07 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:07 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:11 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:11 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:11 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:16 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:16 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:16 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:16 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:25 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:25 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:30 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:30 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:30 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:31 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:31 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:35 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:35 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:35 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:35 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:39 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:39 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:40 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:40 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:40 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:40 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:40 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:40 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:50 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:55 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:55 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:02:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:02:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:02:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:02:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:02:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:03 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:03 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:04 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:04 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:09 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:18 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:18 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:23 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:23 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:28 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:28 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:28 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:28 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:28 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:28 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:32 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:32 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:32 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:33 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:33 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:46 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:51 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:51 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:52 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:52 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:52 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:52 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:52 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:52 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:56 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:56 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:57 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:03:57 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:03:57 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:03:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:03:57 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:03:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:02 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:07 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:07 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:07 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:07 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:11 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:11 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:11 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:16 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:16 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:16 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:23 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:23 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:23 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:23 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:23 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:23 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:28 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:32 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:32 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:32 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:33 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:33 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:38 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:38 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:38 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:52 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:52 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:52 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:52 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:52 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:52 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:55 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:55 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:55 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:56 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:56 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:56 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:04:56 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:04:56 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:04:56 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:04:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:04:56 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:07 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:07 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:07 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:07 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:23 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:23 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:25 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:25 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:26 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:05:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:05:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:36 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:45 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:05:45 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:05:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:05:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:05:45 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:05:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:05:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:05:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:05:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:05:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:06:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:06:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:06:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:06:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:03 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:03 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:06:03 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:03 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:03 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:03 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:06:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:04 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:04 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:06:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:19 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:19 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:19 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:06:20 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:20 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:20 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:06:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:06:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:06:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:06:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:06:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:06:23 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:23 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:06:23 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:23 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:28 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:28 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:28 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-10 23:06:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:29 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - wild = []: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-10 23:06:29 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - if (free_spin_reel_counter[0] &gt;= 1 &amp;&amp; free_spin_reel_counter[1] &gt;= 1 &amp;&amp; free_spin_reel_counter[2] &gt;= 1): null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - break: null

2019-08-10 23:06:29 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("RGS(M4)/1_Round_detail", ["partner":Partner, "M4_spin_round_id":M4_spin_round_id])): Send request and verify the response successfully

2019-08-10 23:06:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:31 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_detail = M4_round.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_object = M4_round_detail: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_object = M4_round_object: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_transaction_type = transaction_type: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_transaction_type = M4_round_transaction_type: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_player_id = player_id: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_player_id = M4_round_player_id: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_booster_type = booster_type: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_booster_type = M4_round_booster_type: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_currency = currency: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_currency = M4_round_currency: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_id = round_id: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_id = M4_round_id: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_transaction_id = transaction_id: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_transaction_id = M4_round_transaction_id: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_transaction_time = transaction_time: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_transaction_time = M4_round_transaction_time: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_total_win = total_win: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_total_win = M4_round_total_win: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_balance_long = balance: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_balance = Long.toString(M4_round_balance_long): null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_balance = M4_round_balance: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_total_bet = total_bet: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_total_bet = M4_round_total_bet: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_bet_value = bet_value: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_bet_value = M4_round_bet_value: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_line = line: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_line = M4_round_line: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels1 = reels[0]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels1 = M4_round_reels1: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels2 = reels[1]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels2 = M4_round_reels2: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels3 = reels[2]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels3 = M4_round_reels3: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels4 = reels[3]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels4 = M4_round_reels4: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels5 = reels[4]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels5 = M4_round_reels5: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_F_reels1 = reels[0]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_F_reels1 = M4_round_F_reels1: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_F_reels2 = reels[1]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_F_reels2 = M4_round_F_reels2: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_F_reels3 = reels[2]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_F_reels3 = M4_round_F_reels3: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_F_reels4 = reels[3]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_F_reels4 = M4_round_F_reels4: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_F_reels5 = reels[4]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_F_reels5 = M4_round_F_reels5: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = symbols[0]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = M4_round_reels0_symbols1: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = symbols[1]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = M4_round_reels0_symbols2: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = symbols[2]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = M4_round_reels0_symbols3: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = symbols[0]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = M4_round_reels1_symbols1: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = symbols[1]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = M4_round_reels1_symbols2: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = symbols[2]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = M4_round_reels1_symbols3: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels1_symbols4 = symbols[3]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = symbol: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = M4_round_reels_symbols_all: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_features_triggered = features_triggered: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_features_complete = complete: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_features_complete = M4_round_features_complete: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_free_spins_left = free_spins_left: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_free_spins_left = M4_round_free_spins_left: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = total_free_spin_count: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = M4_round_total_free_spin_count: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = total_free_spin_win_amount: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = M4_round_total_free_spin_win_amount: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_subfeatures = subfeatures: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_subfeatures = M4_round_subfeatures: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = wild_multiplier: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = M4_round_wild_multiplier: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_wild_config = wild_config: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_wild_config = M4_round_wild_config: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_wild_config_index = index: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_original_reels = original_reels: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_original_reels = M4_round_original_reels: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_swapped_reels = swapped_reels: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_swapped_reels = M4_round_swapped_reels: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_free_spins_added = free_spins_added: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_spin_result_list = spin_results[0]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_feature_state = feature_state: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_feature_state = M4_round_feature_state: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_feature_state_all = feature_state: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_feature_state_all = M4_round_feature_state_all: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_features_type = type: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_features_type = M4_round_features_type: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_scatter_win = scatter_win: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_scatter_win = M4_round_scatter_win: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_spin_result1 = spin_results[1]: null

2019-08-10 23:06:31 - [TEST_STEP][PASSED] - M4_round_spin_result1 = M4_round_spin_result1: null

2019-08-10 23:06:34 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:34 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:34 - [TEST_STEP][PASSED] - M4_round_object_key = M4_round_object.keySet(): null

2019-08-10 23:06:34 - [TEST_STEP][PASSED] - M4_round_spin_result_key = M4_round_spin_result_list.keySet(): null

2019-08-10 23:06:34 - [TEST_STEP][PASSED] - M4_round_feature_triggered_key = M4_round_features_triggered[0].keySet(): null

2019-08-10 23:06:34 - [TEST_STEP][PASSED] - M4_round_reel_key = M4_round_reels1.keySet(): null

2019-08-10 23:06:34 - [TEST_STEP][PASSED] - M4_round_feature_state_key = M4_round_feature_state.keySet(): null

2019-08-10 23:06:34 - [TEST_STEP][PASSED] - M4_round_reels_symbols_key_1 = M4_round_reels0_symbols1.keySet(): null

2019-08-10 23:06:34 - [TEST_STEP][PASSED] - M4_round_reels_symbols_key_2 = M4_round_reels0_symbols2.keySet(): null

2019-08-10 23:06:34 - [TEST_STEP][PASSED] - M4_round_reels_symbols_key_3 = M4_round_reels0_symbols3.keySet(): null

2019-08-10 23:06:39 - [TEST_STEP][PASSED] - M4_round_object_key_list = new java.util.ArrayList(M4_round_object_key): null

2019-08-10 23:06:39 - [TEST_STEP][PASSED] - M4_round_spin_result_key_list = new java.util.ArrayList(M4_round_spin_result_key): null

2019-08-10 23:06:39 - [TEST_STEP][PASSED] - M4_round_feature_triggered_key_list = new java.util.ArrayList(M4_round_feature_triggered_key): null

2019-08-10 23:06:39 - [TEST_STEP][PASSED] - M4_round_reel_key_list = new java.util.ArrayList(M4_round_reel_key): null

2019-08-10 23:06:39 - [TEST_STEP][PASSED] - M4_round_feature_state_key_list = new java.util.ArrayList(M4_round_feature_state_key): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - M4_round_reels_symbols_key1 = new java.util.ArrayList(M4_round_reels_symbols_key_1): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - M4_round_reels_symbols_key2 = new java.util.ArrayList(M4_round_reels_symbols_key_2): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - M4_round_reels_symbols_key3 = new java.util.ArrayList(M4_round_reels_symbols_key_3): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("M4_round_object_key_list is:" + M4_round_object_key_list): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("M4_round_spin_result_key_list is: " + M4_round_spin_result_key_list): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("M4_round_feature_triggered_key_list is: " + M4_round_feature_triggered_key_list): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("M4_round_reel_key_list is: " + M4_round_reel_key_list): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("M4_round_feature_state_key_list is: " + M4_round_feature_state_key_list): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("M4_round_reels_symbols_key_1 is: " + M4_round_reels_symbols_key_1): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("M4_round_reels_symbols_key_2 is: " + M4_round_reels_symbols_key_2): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("M4_round_reels_symbols_key_3 is: " + M4_round_reels_symbols_key_3): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("NG_top_level is: " + NG_top_level): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("NG_spin_result is:" + NG_spin_result): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("NG_feature_trigger is:" + NG_feature_trigger): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("NG_reel is: " + NG_reel): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("NG_feature_state is: " + NG_feature_state): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("NG_reel_symbol1 is: " + NG_reel_symbol1): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("NG_reel_symbol2 is: " + NG_reel_symbol2): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - println("NG_reel_symbol3 is: " + NG_reel_symbol3): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - assert NG_top_level.equals(M4_round_object_key_list): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - assert NG_spin_result.equals(M4_round_spin_result_key_list): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - assert NG_feature_trigger.equals(M4_round_feature_triggered_key_list): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - assert NG_reel.equals(M4_round_reel_key_list): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - assert NG_feature_state.equals(M4_round_feature_state_key_list): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - assert NG_reel_symbol1.equals(M4_round_reels_symbols_key1): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - assert NG_reel_symbol2.equals(M4_round_reels_symbols_key2): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - assert NG_reel_symbol3.equals(M4_round_reels_symbols_key3): null

2019-08-10 23:06:44 - [TEST_STEP][PASSED] - callTestCase(findTestCase("M4-Game/Super_Wild/backup/compare_values/1_verify_value_call_test_case"), ["Partner":Partner, "Userid":Userid, "Game_code":Game_code, "url_krug_gw":url_krug_gw, "secret_key":secret_key, "M4_recorder":M4_recorder]): Call Test Case 'Test Cases/M4-Game/Super_Wild/backup/compare_values/1_verify_value_call_test_case' successfully

2019-08-10 23:06:44 - [TEST_CASE][PASSED] - Test Cases/M4-Game/Super_Wild/backup/compare_values/1_verify_value_call_test_case: Test Cases/M4-Game/Super_Wild/backup/compare_values/1_verify_value_call_test_case

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - excelTestFile02 = "/Users/eiralee/EiraLi-Katalon_API/INT_env/Reports/TestFile02.xls": null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - createExcelFile(excelTestFile02): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - testfile = new java.io.File(excelTestFile02): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - assert testfile.exists() == true: null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelTestFile02): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - createExcelSheets(workbook01, ["NuRGS", "M4_historyOrOthersAPI"]): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - saveWorkbook(excelTestFile02, workbook01): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - SheetCreated01 = ["Sheet0", "NuRGS", "M4_historyOrOthersAPI"]: null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelTestFile02): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - assert SheetCreated01 == getSheetNames(workbook01): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - NuRGS = getExcelSheet(workbook01, "NuRGS"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content = new java.util.HashMap(): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A2", "currency"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A3", "round_id"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A4", "balance"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A5", "bet_value"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A6", "total_bet"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A7", "total_win"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A8", "transaction_id"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A9", "transaction_type"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A10", "reels0_01_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A11", "reels0_02_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A12", "reels0_03_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A13", "reels1_01_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A14", "reels1_02_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A15", "reels1_03_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A16", "reels2_01_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A17", "reels2_02_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A18", "reels2_03_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A19", "reels3_01_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A20", "reels3_02_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A21", "reels3_03_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A22", "reels4_01_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A23", "reels4_02_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A24", "reels4_03_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A25", "F_reels0_01_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A26", "F_reels0_02_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A27", "F_reels0_03_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A28", "F_reels1_01_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A29", "F_reels1_02_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A30", "F_reels1_03_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A31", "F_reels2_01_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A32", "F_reels2_02_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A33", "F_reels2_03_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A34", "F_reels3_01_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A35", "F_reels3_02_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A36", "F_reels3_03_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A37", "F_reels4_01_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A38", "F_reels4_02_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - content.putAt("A39", "F_reels4_03_symbols"): null

2019-08-10 23:06:45 - [TEST_STEP][PASSED] - setValueToCellByAddresses(NuRGS, content): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - saveWorkbook(excelTestFile02, workbook01): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - M4_historyOrOthersAPI = getExcelSheet(workbook01, "M4_historyOrOthersAPI"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1 = new java.util.HashMap(): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A2", "currency"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A3", "round_id"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A4", "balance"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A5", "bet_value"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A6", "total_bet"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A7", "total_win"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A8", "transaction_id"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A9", "transaction_type"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A10", "reels0_01_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A11", "reels0_02_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A12", "reels0_03_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A13", "reels1_01_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A14", "reels1_02_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A15", "reels1_03_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A16", "reels2_01_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A17", "reels2_02_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A18", "reels2_03_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A19", "reels3_01_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A20", "reels3_02_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A21", "reels3_03_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A22", "reels4_01_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A23", "reels4_02_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A24", "reels4_03_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A25", "F_reels0_01_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A26", "F_reels0_02_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A27", "F_reels0_03_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A28", "F_reels1_01_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A29", "F_reels1_02_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A30", "F_reels1_03_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A31", "F_reels2_01_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A32", "F_reels2_02_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A33", "F_reels2_03_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A34", "F_reels3_01_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A35", "F_reels3_02_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A36", "F_reels3_03_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A37", "F_reels4_01_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A38", "F_reels4_02_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - content1.putAt("A39", "F_reels4_03_symbols"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - setValueToCellByAddresses(M4_historyOrOthersAPI, content1): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - saveWorkbook(excelTestFile02, workbook01): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("Wallet/Get_Session_Token", ["url_krug_gw":url_krug_gw, "partner":Partner, "secret_key":secret_key, "userid":Userid])): Send request and verify the response successfully

2019-08-10 23:06:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - getResponseText()).contains("session_token"): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - getsession = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - result_getsession = getsession.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - println("...value extracted is :" + session_token): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - println("GlobalVariable is :" + session_token): null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-10 23:06:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:46 - [TEST_STEP][PASSED] - M4_login = sendRequestAndVerify(findTestObject("RGS(M4)/M4_Login", ["partner":Partner, "game_code":Game_code, "session_token":session_token])): Send request and verify the response successfully

2019-08-10 23:06:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:48 - [TEST_STEP][PASSED] - M4_login = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:48 - [TEST_STEP][PASSED] - result_M4_login = M4_login.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:48 - [TEST_STEP][PASSED] - M4_login_user_id = user_id: null

2019-08-10 23:06:48 - [TEST_STEP][PASSED] - println("playerid is: " + M4_login_user_id): null

2019-08-10 23:06:48 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-10 23:06:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:48 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-10 23:06:48 - [TEST_STEP][PASSED] - M4_init = sendRequestAndVerify(findTestObject("RGS(M4)/M4_init", ["partner":Partner, "M4_recorder":M4_recorder, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-10 23:06:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_init = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - result_M4_init = M4_init.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - rgs_session_token = session_token: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_init_balance = balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_init_balance = M4_init_balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - game_code = genesis_id: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - game_code = game_code: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_free_round = free_round: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_free_round = M4_free_round: null

2019-08-10 23:06:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("RGS(M4)/1_Round_detail", ["partner":Partner, "M4_spin_round_id":M4_spin_round_id])): Send request and verify the response successfully

2019-08-10 23:06:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_detail = M4_round.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_object = M4_round_detail: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_object = M4_round_object: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_transaction_type = transaction_type: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_transaction_type = M4_round_transaction_type: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_player_id = player_id: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_player_id = M4_round_player_id: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_booster_type = booster_type: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_booster_type = M4_round_booster_type: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_currency = currency: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_currency = M4_round_currency: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_id = round_id: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_id = M4_round_id: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_transaction_id = transaction_id: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_transaction_id = M4_round_transaction_id: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_transaction_time = transaction_time: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_transaction_time = M4_round_transaction_time: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_total_win = total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_total_win = M4_round_total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_balance_long = balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_balance = Long.toString(M4_round_balance_long): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_balance = M4_round_balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_total_bet = total_bet: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_total_bet = M4_round_total_bet: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_bet_value = bet_value: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_bet_value = M4_round_bet_value: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_line = line: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_line = M4_round_line: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels1 = reels[0]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels1 = M4_round_reels1: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels2 = reels[1]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels2 = M4_round_reels2: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels3 = reels[2]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels3 = M4_round_reels3: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels4 = reels[3]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels4 = M4_round_reels4: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels5 = reels[4]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels5 = M4_round_reels5: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_F_reels1 = reels[0]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_F_reels1 = M4_round_F_reels1: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_F_reels2 = reels[1]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_F_reels2 = M4_round_F_reels2: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_F_reels3 = reels[2]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_F_reels3 = M4_round_F_reels3: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_F_reels4 = reels[3]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_F_reels4 = M4_round_F_reels4: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_F_reels5 = reels[4]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_F_reels5 = M4_round_F_reels5: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = symbols[0]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = M4_round_reels0_symbols1: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = symbols[1]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = M4_round_reels0_symbols2: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = symbols[2]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = M4_round_reels0_symbols3: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = symbols[0]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = M4_round_reels1_symbols1: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = symbols[1]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = M4_round_reels1_symbols2: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = symbols[2]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = M4_round_reels1_symbols3: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels1_symbols4 = symbols[3]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = M4_round_reels_symbols_all: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_features_triggered = features_triggered: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_features_complete = complete: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_features_complete = M4_round_features_complete: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_free_spins_left = free_spins_left: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_free_spins_left = M4_round_free_spins_left: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = total_free_spin_count: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = M4_round_total_free_spin_count: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = total_free_spin_win_amount: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = M4_round_total_free_spin_win_amount: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_subfeatures = subfeatures: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_subfeatures = M4_round_subfeatures: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = wild_multiplier: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = M4_round_wild_multiplier: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_wild_config = wild_config: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_wild_config = M4_round_wild_config: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_wild_config_index = index: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_original_reels = original_reels: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_original_reels = M4_round_original_reels: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_swapped_reels = swapped_reels: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_swapped_reels = M4_round_swapped_reels: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_free_spins_added = free_spins_added: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_spin_result_list = spin_results[0]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_feature_state = feature_state: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_feature_state = M4_round_feature_state: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_feature_state_all = feature_state: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_feature_state_all = M4_round_feature_state_all: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_features_type = type: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_features_type = M4_round_features_type: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_scatter_win = scatter_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_scatter_win = M4_round_scatter_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_spin_result1 = spin_results[1]: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_spin_result1 = M4_round_spin_result1: null

2019-08-10 23:06:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_balance = M4_round_balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_balance = Long.valueOf(M4_balance): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_spin_result = spin_results: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_free_spin_totalWin_result = "": null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_total_win = 0: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_round_spin_result.size(), (i++)]): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - last_spin_result = balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_free_spin_totalWin = total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(last_spin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(M4_round_free_spin_totalWin): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_total_win = M4_round_free_spin_totalWin + M4_total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("M4_round_free_spin_totalWin_result is: " + M4_round_free_spin_totalWin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (last_spin_result &gt;= M4_round_balance): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_balance = last_spin_result: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - last_spin_result = balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_free_spin_totalWin = total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(last_spin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(M4_round_free_spin_totalWin): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_total_win = M4_round_free_spin_totalWin + M4_total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("M4_round_free_spin_totalWin_result is: " + M4_round_free_spin_totalWin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (last_spin_result &gt;= M4_round_balance): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_balance = last_spin_result: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - last_spin_result = balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_free_spin_totalWin = total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(last_spin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(M4_round_free_spin_totalWin): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_total_win = M4_round_free_spin_totalWin + M4_total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("M4_round_free_spin_totalWin_result is: " + M4_round_free_spin_totalWin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (last_spin_result &gt;= M4_round_balance): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_balance = last_spin_result: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - last_spin_result = balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_free_spin_totalWin = total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(last_spin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(M4_round_free_spin_totalWin): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_total_win = M4_round_free_spin_totalWin + M4_total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("M4_round_free_spin_totalWin_result is: " + M4_round_free_spin_totalWin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (last_spin_result &gt;= M4_round_balance): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_balance = last_spin_result: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - last_spin_result = balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_free_spin_totalWin = total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(last_spin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(M4_round_free_spin_totalWin): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_total_win = M4_round_free_spin_totalWin + M4_total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("M4_round_free_spin_totalWin_result is: " + M4_round_free_spin_totalWin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (last_spin_result &gt;= M4_round_balance): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_balance = last_spin_result: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - last_spin_result = balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_free_spin_totalWin = total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(last_spin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(M4_round_free_spin_totalWin): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_total_win = M4_round_free_spin_totalWin + M4_total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("M4_round_free_spin_totalWin_result is: " + M4_round_free_spin_totalWin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (last_spin_result &gt;= M4_round_balance): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_balance = last_spin_result: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - last_spin_result = balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_free_spin_totalWin = total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(last_spin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(M4_round_free_spin_totalWin): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_total_win = M4_round_free_spin_totalWin + M4_total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("M4_round_free_spin_totalWin_result is: " + M4_round_free_spin_totalWin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (last_spin_result &gt;= M4_round_balance): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_balance = last_spin_result: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - last_spin_result = balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_free_spin_totalWin = total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(last_spin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(M4_round_free_spin_totalWin): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_total_win = M4_round_free_spin_totalWin + M4_total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("M4_round_free_spin_totalWin_result is: " + M4_round_free_spin_totalWin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (last_spin_result &gt;= M4_round_balance): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_balance = last_spin_result: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - last_spin_result = balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_free_spin_totalWin = total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(last_spin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(M4_round_free_spin_totalWin): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_total_win = M4_round_free_spin_totalWin + M4_total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("M4_round_free_spin_totalWin_result is: " + M4_round_free_spin_totalWin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (last_spin_result &gt;= M4_round_balance): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_balance = last_spin_result: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - last_spin_result = balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_free_spin_totalWin = total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(last_spin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(M4_round_free_spin_totalWin): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_total_win = M4_round_free_spin_totalWin + M4_total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("M4_round_free_spin_totalWin_result is: " + M4_round_free_spin_totalWin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (last_spin_result &gt;= M4_round_balance): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_balance = last_spin_result: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - last_spin_result = balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_free_spin_totalWin = total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(last_spin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(M4_round_free_spin_totalWin): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_total_win = M4_round_free_spin_totalWin + M4_total_win: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("M4_round_free_spin_totalWin_result is: " + M4_round_free_spin_totalWin_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (last_spin_result &gt;= M4_round_balance): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_round_balance = last_spin_result: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("RGS(M4)/in_game_history_detail", ["partner":Partner, "M4_spin_transaction_id":M4_spin_transaction_id, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-10 23:06:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-10 23:06:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_game_history = new groovy.json.JsonSlurper(): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history = M4_game_history.parseText(response.getResponseBodyContent()): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_currency = currency: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_currency = M4_history_currency: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_spin_transaction = spin_transaction: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_spin_transaction = M4_history_spin_transaction: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_date = date: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_game_id = game_id: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_tx_id = tx_id: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_causality = causality: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_causality = M4_history_causality: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_round_id = round_id: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_round_id = M4_history_round_id: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_game_total_won = total_won: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_game_total_won = M4_history_game_total_won: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_game_total_bet = total_bet: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_total_bet = M4_history_game_total_bet: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_lines = lines: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_total_won = total_won: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_total_won = M4_history_total_won: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_bonus_name = bonus_name: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_bonus_retrigger = bonus_retrigger: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_key = key: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_data = data: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_total_bet = total_bet: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_total_bet = M4_history_total_bet: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_balance = balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_balance = M4_history_balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_type = type: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_reel_symbol = symbols: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_reel_symbol = M4_history_reel_symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_reels = reels: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_reels = M4_history_reels: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_F_reels1 = reels: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_F_reels = M4_history_F_reels1: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_multiplier = multiplier: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_multiplier = M4_history_multiplier: null

2019-08-10 23:06:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-10 23:06:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - reels01 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(getClass().getName()): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(reels01): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - reels02 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - reels03 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - reels11 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - reels12 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - reels13 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - reels21 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - reels22 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - reels23 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - reels31 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - reels32 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - reels33 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - reels41 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - reels42 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - reels43 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_reels01 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_reels02 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_reels03 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_reels11 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_reels12 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_reels13 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_reels21 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_reels22 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_reels23 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_reels31 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_reels32 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_reels33 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_reels41 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_reels42 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_reels43 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - free_spin_reels = reels: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; free_spin_reels.size(), (i++)]): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 2 || i == 3 || i == 4): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 2 || i == 3 || i == 4): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 2 || i == 3 || i == 4): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(i): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 2): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 0 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 1 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 3): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(i): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 2): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 0 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 1 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 3): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(i): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 2): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 0 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 1 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 3): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 2 || i == 3 || i == 4): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(i): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 2): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 3): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 0 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 1 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(i): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 2): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 3): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 0 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 1 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(i): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 2): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 3): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 0 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 1 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (j == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 2 || i == 3 || i == 4): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(i): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 2): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 3): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(i): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 2): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 3): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(i): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 2): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 3): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_reels = M4_history_reels: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4reels01 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(M4reels01): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4reels02 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4reels03 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4reels11 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4reels12 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4reels13 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4reels21 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4reels22 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4reels23 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4reels31 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4reels32 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4reels33 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4reels41 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4reels42 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4reels43 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_M4reels01 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println(F_M4reels01): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_M4reels02 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_M4reels03 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_M4reels11 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_M4reels12 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_M4reels13 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_M4reels21 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_M4reels22 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_M4reels23 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_M4reels31 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_M4reels32 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_M4reels33 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_M4reels41 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_M4reels42 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - F_M4reels43 = symbol: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_balance = M4_history_balance: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - M4_history_balance_result = new java.lang.Long(M4_history_balance): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 1, 1, M4_round_currency): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 1, 1, M4_history_currency): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 2, 1, M4_round_id): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 2, 1, M4_history_round_id): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 3, 1, M4_round_balance): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 3, 1, M4_history_balance_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 4, 1, M4_round_bet_value): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 4, 1, M4_history_total_bet): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 5, 1, M4_round_total_bet): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 5, 1, M4_history_total_bet): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 6, 1, M4_total_win): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 6, 1, M4_history_total_won): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 7, 1, M4_round_transaction_id): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 7, 1, M4_history_spin_transaction): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 8, 1, M4_round_transaction_type): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 8, 1, "BASE"): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 9, 1, reels01): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 10, 1, reels02): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 11, 1, reels03): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 12, 1, reels11): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 13, 1, reels12): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 14, 1, reels13): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 15, 1, reels21): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 16, 1, reels22): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 17, 1, reels23): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 18, 1, reels31): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 19, 1, reels32): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 20, 1, reels33): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 21, 1, reels41): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 22, 1, reels42): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 23, 1, reels43): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 24, 1, F_reels01): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 25, 1, F_reels02): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 26, 1, F_reels03): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 27, 1, F_reels11): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 28, 1, F_reels12): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 29, 1, F_reels13): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 30, 1, F_reels21): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 31, 1, F_reels22): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 32, 1, F_reels23): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 33, 1, F_reels31): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 34, 1, F_reels32): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 35, 1, F_reels33): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 36, 1, F_reels41): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 37, 1, F_reels42): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(NuRGS, 38, 1, F_reels43): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 9, 1, M4reels01): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 10, 1, M4reels02): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 11, 1, M4reels03): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 12, 1, M4reels11): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 13, 1, M4reels12): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 14, 1, M4reels13): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 15, 1, M4reels21): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 16, 1, M4reels22): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 17, 1, M4reels23): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 18, 1, M4reels31): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 19, 1, M4reels32): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 20, 1, M4reels33): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 21, 1, M4reels41): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 22, 1, M4reels42): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 23, 1, M4reels43): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 24, 1, F_M4reels01): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 25, 1, F_M4reels02): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 26, 1, F_M4reels03): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 27, 1, F_M4reels11): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 28, 1, F_M4reels12): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 29, 1, F_M4reels13): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 30, 1, F_M4reels21): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 31, 1, F_M4reels22): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 32, 1, F_M4reels23): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 33, 1, F_M4reels31): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 34, 1, F_M4reels32): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 35, 1, F_M4reels33): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 36, 1, F_M4reels41): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 37, 1, F_M4reels42): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByIndex(M4_historyOrOthersAPI, 38, 1, F_M4reels43): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByAddresses(M4_historyOrOthersAPI, content1): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - setValueToCellByAddresses(NuRGS, content): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - saveWorkbook(excelTestFile02, workbook01): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - CompareSheet_result = compareTwoSheets(NuRGS, M4_historyOrOthersAPI): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("Result of compare sheet01 of File01Sheet01 and File02Sheet01 is: " + CompareSheet_result): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("reels01 is: " + reels01): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("M4reels01 is: " + M4reels01): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("F_reels01 is: " + F_reels01): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("F_M4reels01 is: " + F_M4reels01): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - feature_trigger_complete = complete: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - println("feature_trigger_complete" + feature_trigger_complete): null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - assert reels01 == M4reels01: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - assert F_reels01 == F_M4reels01: null

2019-08-10 23:06:49 - [TEST_STEP][PASSED] - assert feature_trigger_complete != true: null

2019-08-10 23:06:49 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/M4-Game/Super_Wild/backup/compare_values/1_verify_value_call_test_case' successfully</system-out>
            <system-err></system-err>
        </testcase>
        <system-out>2019-08-10 22:58:51 - [TEST_SUITE][PASSED] - superWild_1: Test Cases/M4-Game/Super_Wild/1_Free_Spin_CALL</system-out>
        <system-err></system-err>
    </testsuite>
</testsuites>
