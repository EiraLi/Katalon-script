<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites name="superWild_2" time="37" tests="1" failures="0" errors="0">
    <testsuite name="superWild_2" tests="1" failures="0" errors="0" time="37" timestamp="2019-08-24 11:08:01" hostname="eiralee - 172.20.10.2" id="Test Suites/INT/superWild_2">
        <properties>
            <property name="deviceName" value=""/>
            <property name="devicePlatform" value=""/>
            <property name="logFolder" value="/Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748"/>
            <property name="logFiles" value="/Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/execution0.log"/>
            <property name="attachments" value=""/>
            <property name="hostName" value="eiralee - 172.20.10.2"/>
            <property name="hostAddress" value="172.20.10.2"/>
            <property name="os" value="Mac OS X 64bit"/>
            <property name="katalonVersion" value="6.3.1.2"/>
        </properties>
        <testcase name="Test Cases/INT_env/2_reel_wins_CALL" classname="Test Cases/INT_env/2_reel_wins_CALL" status="PASSED">
            <system-out>2019-08-24 11:08:01 - [TEST_CASE][PASSED] - Test Cases/INT_env/2_reel_wins_CALL: Test Cases/INT_env/2_reel_wins_CALL

2019-08-24 11:08:02 - [TEST_STEP][PASSED] - reel_wins = new java.util.ArrayList(): null

2019-08-24 11:08:02 - [TEST_STEP][PASSED] - reel_wins[0] = "line_config": null

2019-08-24 11:08:02 - [TEST_STEP][PASSED] - reel_wins[1] = "line_number": null

2019-08-24 11:08:02 - [TEST_STEP][PASSED] - reel_wins[2] = "of_kind": null

2019-08-24 11:08:02 - [TEST_STEP][PASSED] - reel_wins[3] = "prize": null

2019-08-24 11:08:02 - [TEST_STEP][PASSED] - reel_wins[4] = "right_to_left": null

2019-08-24 11:08:02 - [TEST_STEP][PASSED] - reel_wins[5] = "symbol": null

2019-08-24 11:08:02 - [TEST_STEP][PASSED] - reel_wins[6] = "wild_win": null

2019-08-24 11:08:02 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/Wallet/Get_Session_Token", ["url_krug_gw":url_krug_gw, "partner":Partner, "secret_key":secret_key, "userid":Userid])): Send request and verify the response successfully

2019-08-24 11:08:03 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/0.har

2019-08-24 11:08:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:04 - [TEST_STEP][PASSED] - getResponseText()).contains("session_token"): null

2019-08-24 11:08:04 - [TEST_STEP][PASSED] - getsession = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:04 - [TEST_STEP][PASSED] - result_getsession = getsession.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:04 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-24 11:08:04 - [TEST_STEP][PASSED] - println("...value extracted is :" + session_token): null

2019-08-24 11:08:04 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-24 11:08:06 - [TEST_STEP][PASSED] - println("GlobalVariable is :" + session_token): null

2019-08-24 11:08:06 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-24 11:08:06 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-24 11:08:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:06 - [TEST_STEP][PASSED] - M4_login = sendRequestAndVerify(findTestObject("INT/RGS(M4)/M4_Login", ["partner":Partner, "game_code":Game_code, "session_token":session_token])): Send request and verify the response successfully

2019-08-24 11:08:07 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/1.har

2019-08-24 11:08:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - M4_login = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - result_M4_login = M4_login.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - M4_login_user_id = user_id: null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - println("playerid is: " + M4_login_user_id): null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-24 11:08:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - M4_init = sendRequestAndVerify(findTestObject("INT/RGS(M4)/M4_init", ["partner":Partner, "gameId":gameId, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-24 11:08:08 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/2.har

2019-08-24 11:08:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - M4_init = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - result_M4_init = M4_init.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - rgs_session_token = session_token: null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - M4_init_balance = balance: null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - M4_init_balance = M4_init_balance: null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - game_code = genesis_id: null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - game_code = game_code: null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - M4_free_round = free_round: null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - M4_free_round = M4_free_round: null

2019-08-24 11:08:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt;= 500, (i++)]): null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 11:08:09 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/3.har

2019-08-24 11:08:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:09 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 11:08:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins != 0 &amp;&amp; M4_spin_line_wins.size() != 0): null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:09 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 11:08:10 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/4.har

2019-08-24 11:08:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 11:08:10 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins != 0 &amp;&amp; M4_spin_line_wins.size() != 0): null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:10 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 11:08:11 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/5.har

2019-08-24 11:08:11 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 11:08:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins != 0 &amp;&amp; M4_spin_line_wins.size() != 0): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 11:08:12 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/6.har

2019-08-24 11:08:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 11:08:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins != 0 &amp;&amp; M4_spin_line_wins.size() != 0): null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 11:08:13 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/7.har

2019-08-24 11:08:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 11:08:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins != 0 &amp;&amp; M4_spin_line_wins.size() != 0): null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 11:08:13 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/8.har

2019-08-24 11:08:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 11:08:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins != 0 &amp;&amp; M4_spin_line_wins.size() != 0): null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 11:08:14 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/9.har

2019-08-24 11:08:15 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:15 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 11:08:18 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins != 0 &amp;&amp; M4_spin_line_wins.size() != 0): null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:18 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 11:08:19 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/10.har

2019-08-24 11:08:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 11:08:19 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:19 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins != 0 &amp;&amp; M4_spin_line_wins.size() != 0): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 11:08:19 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/11.har

2019-08-24 11:08:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 11:08:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 11:08:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 11:08:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 11:08:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 11:08:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 11:08:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 11:08:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 11:08:34 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 11:08:34 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 11:08:34 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:34 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:34 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins != 0 &amp;&amp; M4_spin_line_wins.size() != 0): null

2019-08-24 11:08:34 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:34 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("INT/RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-24 11:08:35 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/12.har

2019-08-24 11:08:35 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:35 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - wild = []: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = spin_result: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - M4_spin_bonus_spin_result = M4_spin_bonus_spin_result: null

2019-08-24 11:08:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins != 0 &amp;&amp; M4_spin_line_wins.size() != 0): null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - break: null

2019-08-24 11:08:35 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/RGS(M4)/2_Round_detail", ["partner":Partner, "M4_spin_round_id":M4_spin_round_id])): Send request and verify the response successfully

2019-08-24 11:08:36 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/13.har

2019-08-24 11:08:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_detail = M4_round.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_transaction_type = transaction_type: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_transaction_type = M4_round_transaction_type: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_player_id = player_id: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_player_id = M4_round_player_id: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_booster_type = booster_type: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_booster_type = M4_round_booster_type: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_currency = currency: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_currency = M4_round_currency: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_id = round_id: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_id = M4_round_id: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_transaction_id = transaction_id: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_transaction_id = M4_round_transaction_id: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_transaction_time = transaction_time: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_transaction_time = M4_round_transaction_time: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_total_win = total_win: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_total_win = M4_round_total_win: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_balance = balance: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_balance = M4_round_balance: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_total_bet = total_bet: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_total_bet = M4_round_total_bet: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_bet_value = bet_value: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_bet_value = M4_round_bet_value: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_line = line: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_line = M4_round_line: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reels = reels: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reels = M4_round_reels: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reels_symbols = symbols: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reels_symbols = M4_round_reels_symbols: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_features_triggered = features_triggered: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reel_wins_symbol = symbol: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reel_wins_symbol = M4_round_reel_wins_symbol: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reel_wins = reel_wins[0]: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reel_wins = M4_round_reel_wins: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - println("******GlobalVariable.M4_round_reel_wins is:****** " + newline + M4_round_reel_wins): null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reel_wins_of_kind = of_kind: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reel_wins_of_kind = M4_round_reel_wins_of_kind: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reel_wins_wild_win = wild_win: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reel_wins_wild_win = M4_round_reel_wins_wild_win: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reel_wins_line_number = line_number: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reel_wins_line_number = M4_round_reel_wins_line_number: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reel_wins_line_config = line_config: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reel_wins_line_config = M4_round_reel_wins_line_config: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reel_wins_prize = prize: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reel_wins_prize = M4_round_reel_wins_prize: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_reel_wins_right_to_left = right_to_left: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_feature_state_all = feature_state: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_feature_state_all = M4_round_feature_state_all: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_features_type = type: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_features_type = M4_round_features_type: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_features_complete = complete: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_features_complete = M4_round_features_complete: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_free_spins_left = free_spins_left: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_free_spins_left = M4_round_free_spins_left: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = total_free_spin_count: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = M4_round_total_free_spin_count: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = total_free_spin_win_amount: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = M4_round_total_free_spin_win_amount: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_subfeatures = subfeatures: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_subfeatures = M4_round_subfeatures: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_object = object: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_object = M4_round_object: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_spin_result_list = spin_results: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_spin_ = spin_results: null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-24 11:08:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - M4_round_All_keys = M4_round_reel_wins.keySet(): null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - listofKeys = new java.util.ArrayList(M4_round_All_keys): null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - println("listofKeys is: " + listofKeys): null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - println("reel_wins_list" + reel_wins): null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - assert reel_wins.equals(listofKeys): null

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - callTestCase(findTestCase("INT_env/compare_values/2_reel_wins_verify_value"), ["Partner":Partner, "Userid":Userid, "Game_code":Game_code, "url_krug_gw":url_krug_gw, "secret_key":secret_key, "gameId":gameId]): Call Test Case 'Test Cases/INT_env/compare_values/2_reel_wins_verify_value' successfully

2019-08-24 11:08:36 - [TEST_CASE][PASSED] - Test Cases/INT_env/compare_values/2_reel_wins_verify_value: Test Cases/INT_env/compare_values/2_reel_wins_verify_value

2019-08-24 11:08:36 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/Wallet/Get_Session_Token", ["url_krug_gw":url_krug_gw, "partner":Partner, "secret_key":secret_key, "userid":Userid])): Send request and verify the response successfully

2019-08-24 11:08:36 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/14.har

2019-08-24 11:08:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - getResponseText()).contains("session_token"): null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - getsession = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - result_getsession = getsession.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - println("...value extracted is :" + session_token): null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - println("GlobalVariable is :" + session_token): null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-24 11:08:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - M4_login = sendRequestAndVerify(findTestObject("INT/RGS(M4)/M4_Login", ["partner":Partner, "game_code":Game_code, "session_token":session_token])): Send request and verify the response successfully

2019-08-24 11:08:37 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/15.har

2019-08-24 11:08:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - M4_login = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - result_M4_login = M4_login.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - M4_login_user_id = user_id: null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - println("playerid is: " + M4_login_user_id): null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-24 11:08:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-24 11:08:37 - [TEST_STEP][PASSED] - M4_init = sendRequestAndVerify(findTestObject("INT/RGS(M4)/M4_init", ["partner":Partner, "gameId":gameId, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-24 11:08:37 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/16.har

2019-08-24 11:08:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_init = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - result_M4_init = M4_init.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - rgs_session_token = session_token: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_init_balance = balance: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_init_balance = M4_init_balance: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - game_code = genesis_id: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - game_code = game_code: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_free_round = free_round: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_free_round = M4_free_round: null

2019-08-24 11:08:38 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:38 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/RGS(M4)/2_Round_detail", ["partner":Partner, "M4_spin_round_id":M4_spin_round_id])): Send request and verify the response successfully

2019-08-24 11:08:38 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/17.har

2019-08-24 11:08:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_detail = M4_round.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_transaction_type = transaction_type: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_transaction_type = M4_round_transaction_type: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_player_id = player_id: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_player_id = M4_round_player_id: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_booster_type = booster_type: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_booster_type = M4_round_booster_type: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_currency = currency: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_currency = M4_round_currency: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_id = round_id: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_id = M4_round_id: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_transaction_id = transaction_id: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_transaction_id = M4_round_transaction_id: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_transaction_time = transaction_time: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_transaction_time = M4_round_transaction_time: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_total_win = total_win: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_total_win = M4_round_total_win: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_balance = balance: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_balance = M4_round_balance: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_total_bet = total_bet: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_total_bet = M4_round_total_bet: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_bet_value = bet_value: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_bet_value = M4_round_bet_value: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_line = line: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_line = M4_round_line: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reels = reels: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reels = M4_round_reels: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reels_symbols = symbols: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reels_symbols = M4_round_reels_symbols: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_features_triggered = features_triggered: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reel_wins_symbol = symbol: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reel_wins_symbol = M4_round_reel_wins_symbol: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reel_wins = reel_wins[0]: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reel_wins = M4_round_reel_wins: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - println("******GlobalVariable.M4_round_reel_wins is:****** " + newline + M4_round_reel_wins): null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reel_wins_of_kind = of_kind: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reel_wins_of_kind = M4_round_reel_wins_of_kind: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reel_wins_wild_win = wild_win: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reel_wins_wild_win = M4_round_reel_wins_wild_win: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reel_wins_line_number = line_number: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reel_wins_line_number = M4_round_reel_wins_line_number: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reel_wins_line_config = line_config: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reel_wins_line_config = M4_round_reel_wins_line_config: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reel_wins_prize = prize: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reel_wins_prize = M4_round_reel_wins_prize: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_reel_wins_right_to_left = right_to_left: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_feature_state_all = feature_state: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_feature_state_all = M4_round_feature_state_all: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_features_type = type: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_features_type = M4_round_features_type: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_features_complete = complete: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_features_complete = M4_round_features_complete: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_free_spins_left = free_spins_left: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_free_spins_left = M4_round_free_spins_left: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = total_free_spin_count: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = M4_round_total_free_spin_count: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = total_free_spin_win_amount: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = M4_round_total_free_spin_win_amount: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_subfeatures = subfeatures: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_subfeatures = M4_round_subfeatures: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_object = object: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_object = M4_round_object: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_spin_result_list = spin_results: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_spin_ = spin_results: null

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-24 11:08:38 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:38 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:38 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("INT/RGS(M4)/2_in_game_history_detail", ["partner":Partner, "M4_spin_transaction_id":M4_spin_transaction_id, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-24 11:08:38 - [MESSAGE][INFO] - HAR: /Users/eiralee/Katalon_Script/SuperWild/Reports/20190824_110748/INT/superWild_2/20190824_110748/requests/main/18.har

2019-08-24 11:08:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-24 11:08:39 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_game_history = new groovy.json.JsonSlurper(): null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history = M4_game_history.parseText(response.getResponseBodyContent()): null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_currency = currency: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_currency = M4_history_currency: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_spin_transaction = spin_transaction: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_spin_transaction = M4_history_spin_transaction: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_date = date: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_game_id = game_id: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_tx_id = tx_id: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_causality = causality: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_causality = M4_history_causality: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_round_id = round_id: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_round_id = M4_history_round_id: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_game_total_won = total_won: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_game_total_bet = total_bet: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_total_bet = M4_history_game_total_bet: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_lines = lines: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_total_won = total_won: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_total_won = M4_history_total_won: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_kind = kind: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_kind = M4_history_kind: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_line_win_symbol = symbol: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_line_win_symbol = M4_history_line_win_symbol: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_prize = prize: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_prize = M4_history_prize: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_line_win_line = line: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_line_win_line = M4_history_line_win_line: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_line_win_multiplier = wild_multiplier: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_line_win_multiplier = M4_history_line_win_multiplier: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_bonus_name = bonus_name: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_bonus_retrigger = bonus_retrigger: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_key = key: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_data = data: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_total_bet = total_bet: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_total_bet = M4_history_total_bet: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_balance = balance: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_balance = M4_history_balance: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_type = type: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_reel_symbol = symbols: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_reel_symbol = M4_history_reel_symbol: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_reels = reels: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - M4_history_reels = M4_history_reels: null

2019-08-24 11:08:39 - [MESSAGE][PASSED] - Verify response successfully

2019-08-24 11:08:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_round_reel_wins_of_kind is: " + M4_round_reel_wins_of_kind): null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_history_kind is: " + M4_history_kind): null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_round_reel_wins_line_number is: " + M4_round_reel_wins_line_number): null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_history_line_win_line is: " + M4_history_line_win_line): null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_round_reel_wins_prize is: " + M4_round_reel_wins_prize): null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_history_prize is: " + M4_history_prize): null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_round_reel_wins_symbol is: " + M4_round_reel_wins_symbol): null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_history_line_win_symbol is: " + M4_history_line_win_symbol): null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - assert M4_round_reel_wins_of_kind == M4_history_kind: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - assert M4_round_reel_wins_line_number == M4_history_line_win_line: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - assert M4_round_reel_wins_prize == M4_history_prize: null

2019-08-24 11:08:39 - [TEST_STEP][PASSED] - assert M4_round_reel_wins_symbol == M4_history_line_win_symbol: null

2019-08-24 11:08:39 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/INT_env/compare_values/2_reel_wins_verify_value' successfully</system-out>
            <system-err></system-err>
        </testcase>
        <system-out>2019-08-24 11:08:01 - [TEST_SUITE][INCOMPLETE] - superWild_2: null</system-out>
        <system-err>2019-08-24 11:08:01 - [TEST_SUITE][INCOMPLETE] - superWild_2: null</system-err>
    </testsuite>
</testsuites>
